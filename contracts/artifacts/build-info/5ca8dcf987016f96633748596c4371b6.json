{
	"id": "5ca8dcf987016f96633748596c4371b6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.0",
	"solcLongVersion": "0.6.0+commit.26b70077",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/supplier.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.4.16 <0.7.0;\r\n\r\nimport './paylock.sol';\r\n\r\ncontract Supplier {\r\n    \r\n    Paylock p;\r\n    \r\n    enum State { Working , Completed }\r\n    \r\n    State st;\r\n    \r\n    constructor(address pp) public {\r\n        p = Paylock(pp);\r\n        st = State.Working;\r\n    }\r\n    \r\n    function finish() external {\r\n        require (st == State.Working);\r\n        p.signal();\r\n        st = State.Completed;\r\n    }\r\n    \r\n}\r\n\r\ncontract Rental {\r\n    \r\n    address resource_owner;\r\n    bool resource_available;\r\n    \r\n    constructor() public {\r\n        resource_available = true;\r\n    }\r\n    \r\n    function rent_out_resource() external {\r\n        require(resource_available == true);\r\n        //CHECK FOR PAYMENT HERE\r\n        resource_owner = msg.sender;\r\n        resource_available = false;\r\n    }\r\n\r\n    function retrieve_resource() external {\r\n        require(resource_available == false && msg.sender == resource_owner);\r\n        //RETURN DEPOSIT HERE\r\n        resource_available = true;\r\n    }\r\n    \r\n}"
			},
			"contracts/paylock.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.4.16 <0.7.0;\r\n\r\ncontract Paylock {\r\n    \r\n    enum State { Working , Completed , Done_1 , Delay , Done_2 , Forfeit }\r\n    \r\n    int disc;\r\n    State st;\r\n    \r\n    constructor() public {\r\n        st = State.Working;\r\n        disc = 0;\r\n    }\r\n\r\n    function signal() public {\r\n        require( st == State.Working );\r\n        st = State.Completed;\r\n        disc = 10;\r\n    }\r\n\r\n    function collect_1_Y() public {\r\n        require( st == State.Completed );\r\n        st = State.Done_1;\r\n        disc = 10;\r\n    }\r\n\r\n    function collect_1_N() external {\r\n        require( st == State.Completed );\r\n        st = State.Delay;\r\n        disc = 5;\r\n    }\r\n\r\n    function collect_2_Y() external {\r\n        require( st == State.Delay );\r\n        st = State.Done_2;\r\n        disc = 5;\r\n    }\r\n\r\n    function collect_2_N() external {\r\n        require( st == State.Delay );\r\n        st = State.Forfeit;\r\n        disc = 0;\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/paylock.sol": {
				"Paylock": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "collect_1_N",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collect_1_Y",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collect_2_N",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collect_2_Y",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/paylock.sol\":73:979  contract Paylock {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/paylock.sol\":221:298  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/paylock.sol\":221:298  constructor() public {\r... */\n  pop\n    /* \"contracts/paylock.sol\":258:271  State.Working */\n  0x00\n    /* \"contracts/paylock.sol\":253:255  st */\n  0x01\n  0x00\n    /* \"contracts/paylock.sol\":253:271  st = State.Working */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x05\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  invalid\ntag_4:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/paylock.sol\":289:290  0 */\n  0x00\n    /* \"contracts/paylock.sol\":282:286  disc */\n  dup1\n    /* \"contracts/paylock.sol\":282:290  disc = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/paylock.sol\":73:979  contract Paylock {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/paylock.sol\":73:979  contract Paylock {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/paylock.sol\":73:979  contract Paylock {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4c3bc76e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x640d090b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x94f5c52d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x953884de\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe3ed5166\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/paylock.sol\":439:568  function collect_1_Y() public {\r... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/paylock.sol\":306:431  function signal() public {\r... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/paylock.sol\":847:974  function collect_2_N() external {\r... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/paylock.sol\":576:705  function collect_1_N() external {\r... */\n    tag_6:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/paylock.sol\":713:839  function collect_2_Y() external {\r... */\n    tag_7:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/paylock.sol\":439:568  function collect_1_Y() public {\r... */\n    tag_9:\n        /* \"contracts/paylock.sol\":495:510  State.Completed */\n      0x01\n        /* \"contracts/paylock.sol\":489:510  st == State.Completed */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_19\n      jumpi\n      invalid\n    tag_19:\n        /* \"contracts/paylock.sol\":489:491  st */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/paylock.sol\":489:510  st == State.Completed */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_20\n      jumpi\n      invalid\n    tag_20:\n      eq\n        /* \"contracts/paylock.sol\":480:512  require( st == State.Completed ) */\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n        /* \"contracts/paylock.sol\":528:540  State.Done_1 */\n      0x02\n        /* \"contracts/paylock.sol\":523:525  st */\n      0x01\n      0x00\n        /* \"contracts/paylock.sol\":523:540  st = State.Done_1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x05\n      dup2\n      gt\n      iszero\n      tag_22\n      jumpi\n      invalid\n    tag_22:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":558:560  10 */\n      0x0a\n        /* \"contracts/paylock.sol\":551:555  disc */\n      0x00\n        /* \"contracts/paylock.sol\":551:560  disc = 10 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":439:568  function collect_1_Y() public {\r... */\n      jump\t// out\n        /* \"contracts/paylock.sol\":306:431  function signal() public {\r... */\n    tag_11:\n        /* \"contracts/paylock.sol\":357:370  State.Working */\n      0x00\n        /* \"contracts/paylock.sol\":351:370  st == State.Working */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_24\n      jumpi\n      invalid\n    tag_24:\n        /* \"contracts/paylock.sol\":351:353  st */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/paylock.sol\":351:370  st == State.Working */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_25\n      jumpi\n      invalid\n    tag_25:\n      eq\n        /* \"contracts/paylock.sol\":342:372  require( st == State.Working ) */\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n        /* \"contracts/paylock.sol\":388:403  State.Completed */\n      0x01\n        /* \"contracts/paylock.sol\":383:385  st */\n      dup1\n      0x00\n        /* \"contracts/paylock.sol\":383:403  st = State.Completed */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x05\n      dup2\n      gt\n      iszero\n      tag_27\n      jumpi\n      invalid\n    tag_27:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":421:423  10 */\n      0x0a\n        /* \"contracts/paylock.sol\":414:418  disc */\n      0x00\n        /* \"contracts/paylock.sol\":414:423  disc = 10 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":306:431  function signal() public {\r... */\n      jump\t// out\n        /* \"contracts/paylock.sol\":847:974  function collect_2_N() external {\r... */\n    tag_13:\n        /* \"contracts/paylock.sol\":905:916  State.Delay */\n      0x03\n        /* \"contracts/paylock.sol\":899:916  st == State.Delay */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_29\n      jumpi\n      invalid\n    tag_29:\n        /* \"contracts/paylock.sol\":899:901  st */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/paylock.sol\":899:916  st == State.Delay */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      invalid\n    tag_30:\n      eq\n        /* \"contracts/paylock.sol\":890:918  require( st == State.Delay ) */\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n        /* \"contracts/paylock.sol\":934:947  State.Forfeit */\n      0x05\n        /* \"contracts/paylock.sol\":929:931  st */\n      0x01\n      0x00\n        /* \"contracts/paylock.sol\":929:947  st = State.Forfeit */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x05\n      dup2\n      gt\n      iszero\n      tag_32\n      jumpi\n      invalid\n    tag_32:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":965:966  0 */\n      0x00\n        /* \"contracts/paylock.sol\":958:962  disc */\n      dup1\n        /* \"contracts/paylock.sol\":958:966  disc = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":847:974  function collect_2_N() external {\r... */\n      jump\t// out\n        /* \"contracts/paylock.sol\":576:705  function collect_1_N() external {\r... */\n    tag_15:\n        /* \"contracts/paylock.sol\":634:649  State.Completed */\n      0x01\n        /* \"contracts/paylock.sol\":628:649  st == State.Completed */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_34\n      jumpi\n      invalid\n    tag_34:\n        /* \"contracts/paylock.sol\":628:630  st */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/paylock.sol\":628:649  st == State.Completed */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_35\n      jumpi\n      invalid\n    tag_35:\n      eq\n        /* \"contracts/paylock.sol\":619:651  require( st == State.Completed ) */\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n        /* \"contracts/paylock.sol\":667:678  State.Delay */\n      0x03\n        /* \"contracts/paylock.sol\":662:664  st */\n      0x01\n      0x00\n        /* \"contracts/paylock.sol\":662:678  st = State.Delay */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x05\n      dup2\n      gt\n      iszero\n      tag_37\n      jumpi\n      invalid\n    tag_37:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":696:697  5 */\n      0x05\n        /* \"contracts/paylock.sol\":689:693  disc */\n      0x00\n        /* \"contracts/paylock.sol\":689:697  disc = 5 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":576:705  function collect_1_N() external {\r... */\n      jump\t// out\n        /* \"contracts/paylock.sol\":713:839  function collect_2_Y() external {\r... */\n    tag_17:\n        /* \"contracts/paylock.sol\":771:782  State.Delay */\n      0x03\n        /* \"contracts/paylock.sol\":765:782  st == State.Delay */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_39\n      jumpi\n      invalid\n    tag_39:\n        /* \"contracts/paylock.sol\":765:767  st */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/paylock.sol\":765:782  st == State.Delay */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_40\n      jumpi\n      invalid\n    tag_40:\n      eq\n        /* \"contracts/paylock.sol\":756:784  require( st == State.Delay ) */\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n        /* \"contracts/paylock.sol\":800:812  State.Done_2 */\n      0x04\n        /* \"contracts/paylock.sol\":795:797  st */\n      0x01\n      0x00\n        /* \"contracts/paylock.sol\":795:812  st = State.Done_2 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x05\n      dup2\n      gt\n      iszero\n      tag_42\n      jumpi\n      invalid\n    tag_42:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":830:831  5 */\n      0x05\n        /* \"contracts/paylock.sol\":823:827  disc */\n      0x00\n        /* \"contracts/paylock.sol\":823:831  disc = 5 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":713:839  function collect_2_Y() external {\r... */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220224251da5de1b87a57734cef735fe9011610af7b25b90db9f43b6831c9df0d1b64736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506000600160006101000a81548160ff0219169083600581111561003057fe5b0217905550600080819055506102a28061004b6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80634c3bc76e1461005c578063640d090b1461006657806394f5c52d14610070578063953884de1461007a578063e3ed516614610084575b600080fd5b61006461008e565b005b61006e6100ee565b005b61007861014d565b005b6100826101ac565b005b61008c61020c565b005b6001600581111561009b57fe5b600160009054906101000a900460ff1660058111156100b657fe5b146100c057600080fd5b6002600160006101000a81548160ff021916908360058111156100df57fe5b0217905550600a600081905550565b600060058111156100fb57fe5b600160009054906101000a900460ff16600581111561011657fe5b1461012057600080fd5b60018060006101000a81548160ff0219169083600581111561013e57fe5b0217905550600a600081905550565b6003600581111561015a57fe5b600160009054906101000a900460ff16600581111561017557fe5b1461017f57600080fd5b6005600160006101000a81548160ff0219169083600581111561019e57fe5b021790555060008081905550565b600160058111156101b957fe5b600160009054906101000a900460ff1660058111156101d457fe5b146101de57600080fd5b6003600160006101000a81548160ff021916908360058111156101fd57fe5b02179055506005600081905550565b6003600581111561021957fe5b600160009054906101000a900460ff16600581111561023457fe5b1461023e57600080fd5b6004600160006101000a81548160ff0219169083600581111561025d57fe5b0217905550600560008190555056fea2646970667358221220224251da5de1b87a57734cef735fe9011610af7b25b90db9f43b6831c9df0d1b64736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x30 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x2A2 DUP1 PUSH2 0x4B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C3BC76E EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x640D090B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x94F5C52D EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0x953884DE EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xE3ED5166 EQ PUSH2 0x84 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0xEE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH2 0x14D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x82 PUSH2 0x1AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0x20C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x9B JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xB6 JUMPI INVALID JUMPDEST EQ PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xDF JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xFB JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x116 JUMPI INVALID JUMPDEST EQ PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x13E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x15A JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x175 JUMPI INVALID JUMPDEST EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x19E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1B9 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1D4 JUMPI INVALID JUMPDEST EQ PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1FD JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x219 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x234 JUMPI INVALID JUMPDEST EQ PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x25D JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 TIMESTAMP MLOAD 0xDA 0x5D 0xE1 0xB8 PUSH27 0x57734CEF735FE9011610AF7B25B90DB9F43B6831C9DF0D1B64736F PUSH13 0x63430006000033000000000000 ",
							"sourceMap": "73:906:0:-:0;;;221:77;8:9:-1;5:2;;;30:1;27;20:12;5:2;221:77:0;258:13;253:2;;:18;;;;;;;;;;;;;;;;;;;;;;;;289:1;282:4;:8;;;;73:906;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80634c3bc76e1461005c578063640d090b1461006657806394f5c52d14610070578063953884de1461007a578063e3ed516614610084575b600080fd5b61006461008e565b005b61006e6100ee565b005b61007861014d565b005b6100826101ac565b005b61008c61020c565b005b6001600581111561009b57fe5b600160009054906101000a900460ff1660058111156100b657fe5b146100c057600080fd5b6002600160006101000a81548160ff021916908360058111156100df57fe5b0217905550600a600081905550565b600060058111156100fb57fe5b600160009054906101000a900460ff16600581111561011657fe5b1461012057600080fd5b60018060006101000a81548160ff0219169083600581111561013e57fe5b0217905550600a600081905550565b6003600581111561015a57fe5b600160009054906101000a900460ff16600581111561017557fe5b1461017f57600080fd5b6005600160006101000a81548160ff0219169083600581111561019e57fe5b021790555060008081905550565b600160058111156101b957fe5b600160009054906101000a900460ff1660058111156101d457fe5b146101de57600080fd5b6003600160006101000a81548160ff021916908360058111156101fd57fe5b02179055506005600081905550565b6003600581111561021957fe5b600160009054906101000a900460ff16600581111561023457fe5b1461023e57600080fd5b6004600160006101000a81548160ff0219169083600581111561025d57fe5b0217905550600560008190555056fea2646970667358221220224251da5de1b87a57734cef735fe9011610af7b25b90db9f43b6831c9df0d1b64736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C3BC76E EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x640D090B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x94F5C52D EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0x953884DE EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xE3ED5166 EQ PUSH2 0x84 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x8E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0xEE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH2 0x14D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x82 PUSH2 0x1AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0x20C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x9B JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xB6 JUMPI INVALID JUMPDEST EQ PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xDF JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0xFB JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x116 JUMPI INVALID JUMPDEST EQ PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x13E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x15A JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x175 JUMPI INVALID JUMPDEST EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x19E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1B9 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1D4 JUMPI INVALID JUMPDEST EQ PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1FD JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x219 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x234 JUMPI INVALID JUMPDEST EQ PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x25D JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 TIMESTAMP MLOAD 0xDA 0x5D 0xE1 0xB8 PUSH27 0x57734CEF735FE9011610AF7B25B90DB9F43B6831C9DF0D1B64736F PUSH13 0x63430006000033000000000000 ",
							"sourceMap": "73:906:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;73:906:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;439:129;;;:::i;:::-;;306:125;;;:::i;:::-;;847:127;;;:::i;:::-;;576:129;;;:::i;:::-;;713:126;;;:::i;:::-;;439:129;495:15;489:21;;;;;;;;:2;;;;;;;;;;;:21;;;;;;;;;480:32;;;;;;528:12;523:2;;:17;;;;;;;;;;;;;;;;;;;;;;;;558:2;551:4;:9;;;;439:129::o;306:125::-;357:13;351:19;;;;;;;;:2;;;;;;;;;;;:19;;;;;;;;;342:30;;;;;;388:15;383:2;;:20;;;;;;;;;;;;;;;;;;;;;;;;421:2;414:4;:9;;;;306:125::o;847:127::-;905:11;899:17;;;;;;;;:2;;;;;;;;;;;:17;;;;;;;;;890:28;;;;;;934:13;929:2;;:18;;;;;;;;;;;;;;;;;;;;;;;;965:1;958:4;:8;;;;847:127::o;576:129::-;634:15;628:21;;;;;;;;:2;;;;;;;;;;;:21;;;;;;;;;619:32;;;;;;667:11;662:2;;:16;;;;;;;;;;;;;;;;;;;;;;;;696:1;689:4;:8;;;;576:129::o;713:126::-;771:11;765:17;;;;;;;;:2;;;;;;;;;;;:17;;;;;;;;;756:28;;;;;;800:12;795:2;;:17;;;;;;;;;;;;;;;;;;;;;;;;830:1;823:4;:8;;;;713:126::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "134800",
								"executionCost": "26084",
								"totalCost": "160884"
							},
							"external": {
								"collect_1_N()": "42000",
								"collect_1_Y()": "41934",
								"collect_2_N()": "26978",
								"collect_2_Y()": "42022",
								"signal()": "41956"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 73,
									"end": 979,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 73,
									"end": 979,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 73,
									"end": 979,
									"name": "MSTORE"
								},
								{
									"begin": 221,
									"end": 298,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 221,
									"end": 298,
									"name": "POP"
								},
								{
									"begin": 258,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 253,
									"end": 255,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 253,
									"end": 255,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "EXP"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "DUP2"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "SLOAD"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "DUP2"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "MUL"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "NOT"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "AND"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "SWAP1"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "DUP4"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "DUP2"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "GT"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "ISZERO"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "JUMPI"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "INVALID"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "JUMPDEST"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "MUL"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "OR"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "SWAP1"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "SSTORE"
								},
								{
									"begin": 253,
									"end": 271,
									"name": "POP"
								},
								{
									"begin": 289,
									"end": 290,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 282,
									"end": 286,
									"name": "DUP1"
								},
								{
									"begin": 282,
									"end": 290,
									"name": "DUP2"
								},
								{
									"begin": 282,
									"end": 290,
									"name": "SWAP1"
								},
								{
									"begin": 282,
									"end": 290,
									"name": "SSTORE"
								},
								{
									"begin": 282,
									"end": 290,
									"name": "POP"
								},
								{
									"begin": 73,
									"end": 979,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 73,
									"end": 979,
									"name": "DUP1"
								},
								{
									"begin": 73,
									"end": 979,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 73,
									"end": 979,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 73,
									"end": 979,
									"name": "CODECOPY"
								},
								{
									"begin": 73,
									"end": 979,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 73,
									"end": 979,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220224251da5de1b87a57734cef735fe9011610af7b25b90db9f43b6831c9df0d1b64736f6c63430006000033",
									".code": [
										{
											"begin": 73,
											"end": 979,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "MSTORE"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "POP"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "LT"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "JUMPI"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "SHR"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "PUSH",
											"value": "4C3BC76E"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "EQ"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "JUMPI"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "PUSH",
											"value": "640D090B"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "EQ"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "JUMPI"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "PUSH",
											"value": "94F5C52D"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "EQ"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "JUMPI"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "PUSH",
											"value": "953884DE"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "EQ"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "JUMPI"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "PUSH",
											"value": "E3ED5166"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "EQ"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "JUMPI"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 979,
											"name": "REVERT"
										},
										{
											"begin": 439,
											"end": 568,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 439,
											"end": 568,
											"name": "JUMPDEST"
										},
										{
											"begin": 439,
											"end": 568,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 439,
											"end": 568,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 439,
											"end": 568,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 439,
											"end": 568,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 439,
											"end": 568,
											"name": "JUMPDEST"
										},
										{
											"begin": 439,
											"end": 568,
											"name": "STOP"
										},
										{
											"begin": 306,
											"end": 431,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 306,
											"end": 431,
											"name": "JUMPDEST"
										},
										{
											"begin": 306,
											"end": 431,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 306,
											"end": 431,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 306,
											"end": 431,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 306,
											"end": 431,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 306,
											"end": 431,
											"name": "JUMPDEST"
										},
										{
											"begin": 306,
											"end": 431,
											"name": "STOP"
										},
										{
											"begin": 847,
											"end": 974,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 847,
											"end": 974,
											"name": "JUMPDEST"
										},
										{
											"begin": 847,
											"end": 974,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 847,
											"end": 974,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 847,
											"end": 974,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 847,
											"end": 974,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 847,
											"end": 974,
											"name": "JUMPDEST"
										},
										{
											"begin": 847,
											"end": 974,
											"name": "STOP"
										},
										{
											"begin": 576,
											"end": 705,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 576,
											"end": 705,
											"name": "JUMPDEST"
										},
										{
											"begin": 576,
											"end": 705,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 576,
											"end": 705,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 576,
											"end": 705,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 705,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 576,
											"end": 705,
											"name": "JUMPDEST"
										},
										{
											"begin": 576,
											"end": 705,
											"name": "STOP"
										},
										{
											"begin": 713,
											"end": 839,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 713,
											"end": 839,
											"name": "JUMPDEST"
										},
										{
											"begin": 713,
											"end": 839,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 713,
											"end": 839,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 713,
											"end": 839,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 713,
											"end": 839,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 713,
											"end": 839,
											"name": "JUMPDEST"
										},
										{
											"begin": 713,
											"end": 839,
											"name": "STOP"
										},
										{
											"begin": 439,
											"end": 568,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 439,
											"end": 568,
											"name": "JUMPDEST"
										},
										{
											"begin": 495,
											"end": 510,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "DUP2"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "GT"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "ISZERO"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "JUMPI"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "INVALID"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "JUMPDEST"
										},
										{
											"begin": 489,
											"end": 491,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 489,
											"end": 491,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 489,
											"end": 491,
											"name": "SWAP1"
										},
										{
											"begin": 489,
											"end": 491,
											"name": "SLOAD"
										},
										{
											"begin": 489,
											"end": 491,
											"name": "SWAP1"
										},
										{
											"begin": 489,
											"end": 491,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 489,
											"end": 491,
											"name": "EXP"
										},
										{
											"begin": 489,
											"end": 491,
											"name": "SWAP1"
										},
										{
											"begin": 489,
											"end": 491,
											"name": "DIV"
										},
										{
											"begin": 489,
											"end": 491,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 489,
											"end": 491,
											"name": "AND"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "DUP2"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "GT"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "ISZERO"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "JUMPI"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "INVALID"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "JUMPDEST"
										},
										{
											"begin": 489,
											"end": 510,
											"name": "EQ"
										},
										{
											"begin": 480,
											"end": 512,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 480,
											"end": 512,
											"name": "JUMPI"
										},
										{
											"begin": 480,
											"end": 512,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 480,
											"end": 512,
											"name": "DUP1"
										},
										{
											"begin": 480,
											"end": 512,
											"name": "REVERT"
										},
										{
											"begin": 480,
											"end": 512,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 480,
											"end": 512,
											"name": "JUMPDEST"
										},
										{
											"begin": 528,
											"end": 540,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 523,
											"end": 525,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 523,
											"end": 525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "EXP"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "DUP2"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "SLOAD"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "DUP2"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "MUL"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "NOT"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "AND"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "SWAP1"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "DUP4"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "DUP2"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "GT"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "ISZERO"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "JUMPI"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "INVALID"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "JUMPDEST"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "MUL"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "OR"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "SWAP1"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "SSTORE"
										},
										{
											"begin": 523,
											"end": 540,
											"name": "POP"
										},
										{
											"begin": 558,
											"end": 560,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 551,
											"end": 555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 551,
											"end": 560,
											"name": "DUP2"
										},
										{
											"begin": 551,
											"end": 560,
											"name": "SWAP1"
										},
										{
											"begin": 551,
											"end": 560,
											"name": "SSTORE"
										},
										{
											"begin": 551,
											"end": 560,
											"name": "POP"
										},
										{
											"begin": 439,
											"end": 568,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 306,
											"end": 431,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 306,
											"end": 431,
											"name": "JUMPDEST"
										},
										{
											"begin": 357,
											"end": 370,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 351,
											"end": 370,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 351,
											"end": 370,
											"name": "DUP2"
										},
										{
											"begin": 351,
											"end": 370,
											"name": "GT"
										},
										{
											"begin": 351,
											"end": 370,
											"name": "ISZERO"
										},
										{
											"begin": 351,
											"end": 370,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 351,
											"end": 370,
											"name": "JUMPI"
										},
										{
											"begin": 351,
											"end": 370,
											"name": "INVALID"
										},
										{
											"begin": 351,
											"end": 370,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 351,
											"end": 370,
											"name": "JUMPDEST"
										},
										{
											"begin": 351,
											"end": 353,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 351,
											"end": 353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 351,
											"end": 353,
											"name": "SWAP1"
										},
										{
											"begin": 351,
											"end": 353,
											"name": "SLOAD"
										},
										{
											"begin": 351,
											"end": 353,
											"name": "SWAP1"
										},
										{
											"begin": 351,
											"end": 353,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 351,
											"end": 353,
											"name": "EXP"
										},
										{
											"begin": 351,
											"end": 353,
											"name": "SWAP1"
										},
										{
											"begin": 351,
											"end": 353,
											"name": "DIV"
										},
										{
											"begin": 351,
											"end": 353,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 351,
											"end": 353,
											"name": "AND"
										},
										{
											"begin": 351,
											"end": 370,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 351,
											"end": 370,
											"name": "DUP2"
										},
										{
											"begin": 351,
											"end": 370,
											"name": "GT"
										},
										{
											"begin": 351,
											"end": 370,
											"name": "ISZERO"
										},
										{
											"begin": 351,
											"end": 370,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 351,
											"end": 370,
											"name": "JUMPI"
										},
										{
											"begin": 351,
											"end": 370,
											"name": "INVALID"
										},
										{
											"begin": 351,
											"end": 370,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 351,
											"end": 370,
											"name": "JUMPDEST"
										},
										{
											"begin": 351,
											"end": 370,
											"name": "EQ"
										},
										{
											"begin": 342,
											"end": 372,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 342,
											"end": 372,
											"name": "JUMPI"
										},
										{
											"begin": 342,
											"end": 372,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 342,
											"end": 372,
											"name": "DUP1"
										},
										{
											"begin": 342,
											"end": 372,
											"name": "REVERT"
										},
										{
											"begin": 342,
											"end": 372,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 342,
											"end": 372,
											"name": "JUMPDEST"
										},
										{
											"begin": 388,
											"end": 403,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 383,
											"end": 385,
											"name": "DUP1"
										},
										{
											"begin": 383,
											"end": 385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "EXP"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "DUP2"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "SLOAD"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "DUP2"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "MUL"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "NOT"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "AND"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "SWAP1"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "DUP4"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "DUP2"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "GT"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "ISZERO"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "JUMPI"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "INVALID"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "JUMPDEST"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "MUL"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "OR"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "SWAP1"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "SSTORE"
										},
										{
											"begin": 383,
											"end": 403,
											"name": "POP"
										},
										{
											"begin": 421,
											"end": 423,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 414,
											"end": 418,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 414,
											"end": 423,
											"name": "DUP2"
										},
										{
											"begin": 414,
											"end": 423,
											"name": "SWAP1"
										},
										{
											"begin": 414,
											"end": 423,
											"name": "SSTORE"
										},
										{
											"begin": 414,
											"end": 423,
											"name": "POP"
										},
										{
											"begin": 306,
											"end": 431,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 847,
											"end": 974,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 847,
											"end": 974,
											"name": "JUMPDEST"
										},
										{
											"begin": 905,
											"end": 916,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 899,
											"end": 916,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 899,
											"end": 916,
											"name": "DUP2"
										},
										{
											"begin": 899,
											"end": 916,
											"name": "GT"
										},
										{
											"begin": 899,
											"end": 916,
											"name": "ISZERO"
										},
										{
											"begin": 899,
											"end": 916,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 899,
											"end": 916,
											"name": "JUMPI"
										},
										{
											"begin": 899,
											"end": 916,
											"name": "INVALID"
										},
										{
											"begin": 899,
											"end": 916,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 899,
											"end": 916,
											"name": "JUMPDEST"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "SWAP1"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "SLOAD"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "SWAP1"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "EXP"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "SWAP1"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "DIV"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "AND"
										},
										{
											"begin": 899,
											"end": 916,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 899,
											"end": 916,
											"name": "DUP2"
										},
										{
											"begin": 899,
											"end": 916,
											"name": "GT"
										},
										{
											"begin": 899,
											"end": 916,
											"name": "ISZERO"
										},
										{
											"begin": 899,
											"end": 916,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 899,
											"end": 916,
											"name": "JUMPI"
										},
										{
											"begin": 899,
											"end": 916,
											"name": "INVALID"
										},
										{
											"begin": 899,
											"end": 916,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 899,
											"end": 916,
											"name": "JUMPDEST"
										},
										{
											"begin": 899,
											"end": 916,
											"name": "EQ"
										},
										{
											"begin": 890,
											"end": 918,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 890,
											"end": 918,
											"name": "JUMPI"
										},
										{
											"begin": 890,
											"end": 918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 890,
											"end": 918,
											"name": "DUP1"
										},
										{
											"begin": 890,
											"end": 918,
											"name": "REVERT"
										},
										{
											"begin": 890,
											"end": 918,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 890,
											"end": 918,
											"name": "JUMPDEST"
										},
										{
											"begin": 934,
											"end": 947,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 929,
											"end": 931,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 929,
											"end": 931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "EXP"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "SLOAD"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "MUL"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "NOT"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "AND"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "DUP4"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "GT"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "ISZERO"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "JUMPI"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "INVALID"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "JUMPDEST"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "MUL"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "OR"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "SSTORE"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "POP"
										},
										{
											"begin": 965,
											"end": 966,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 958,
											"end": 962,
											"name": "DUP1"
										},
										{
											"begin": 958,
											"end": 966,
											"name": "DUP2"
										},
										{
											"begin": 958,
											"end": 966,
											"name": "SWAP1"
										},
										{
											"begin": 958,
											"end": 966,
											"name": "SSTORE"
										},
										{
											"begin": 958,
											"end": 966,
											"name": "POP"
										},
										{
											"begin": 847,
											"end": 974,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 576,
											"end": 705,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 576,
											"end": 705,
											"name": "JUMPDEST"
										},
										{
											"begin": 634,
											"end": 649,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "DUP2"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "GT"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "ISZERO"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "JUMPI"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "INVALID"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "JUMPDEST"
										},
										{
											"begin": 628,
											"end": 630,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 628,
											"end": 630,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 628,
											"end": 630,
											"name": "SWAP1"
										},
										{
											"begin": 628,
											"end": 630,
											"name": "SLOAD"
										},
										{
											"begin": 628,
											"end": 630,
											"name": "SWAP1"
										},
										{
											"begin": 628,
											"end": 630,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 628,
											"end": 630,
											"name": "EXP"
										},
										{
											"begin": 628,
											"end": 630,
											"name": "SWAP1"
										},
										{
											"begin": 628,
											"end": 630,
											"name": "DIV"
										},
										{
											"begin": 628,
											"end": 630,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 628,
											"end": 630,
											"name": "AND"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "DUP2"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "GT"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "ISZERO"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "JUMPI"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "INVALID"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "JUMPDEST"
										},
										{
											"begin": 628,
											"end": 649,
											"name": "EQ"
										},
										{
											"begin": 619,
											"end": 651,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 619,
											"end": 651,
											"name": "JUMPI"
										},
										{
											"begin": 619,
											"end": 651,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 619,
											"end": 651,
											"name": "DUP1"
										},
										{
											"begin": 619,
											"end": 651,
											"name": "REVERT"
										},
										{
											"begin": 619,
											"end": 651,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 619,
											"end": 651,
											"name": "JUMPDEST"
										},
										{
											"begin": 667,
											"end": 678,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 662,
											"end": 664,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 662,
											"end": 664,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "EXP"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "DUP2"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "SLOAD"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "DUP2"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "MUL"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "NOT"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "AND"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "SWAP1"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "DUP4"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "DUP2"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "GT"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "ISZERO"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "JUMPI"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "INVALID"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "JUMPDEST"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "MUL"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "OR"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "SWAP1"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "SSTORE"
										},
										{
											"begin": 662,
											"end": 678,
											"name": "POP"
										},
										{
											"begin": 696,
											"end": 697,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 689,
											"end": 693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 689,
											"end": 697,
											"name": "DUP2"
										},
										{
											"begin": 689,
											"end": 697,
											"name": "SWAP1"
										},
										{
											"begin": 689,
											"end": 697,
											"name": "SSTORE"
										},
										{
											"begin": 689,
											"end": 697,
											"name": "POP"
										},
										{
											"begin": 576,
											"end": 705,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 713,
											"end": 839,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 713,
											"end": 839,
											"name": "JUMPDEST"
										},
										{
											"begin": 771,
											"end": 782,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "DUP2"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "GT"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "ISZERO"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "JUMPI"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "INVALID"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "JUMPDEST"
										},
										{
											"begin": 765,
											"end": 767,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 765,
											"end": 767,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 765,
											"end": 767,
											"name": "SWAP1"
										},
										{
											"begin": 765,
											"end": 767,
											"name": "SLOAD"
										},
										{
											"begin": 765,
											"end": 767,
											"name": "SWAP1"
										},
										{
											"begin": 765,
											"end": 767,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 765,
											"end": 767,
											"name": "EXP"
										},
										{
											"begin": 765,
											"end": 767,
											"name": "SWAP1"
										},
										{
											"begin": 765,
											"end": 767,
											"name": "DIV"
										},
										{
											"begin": 765,
											"end": 767,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 765,
											"end": 767,
											"name": "AND"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "DUP2"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "GT"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "ISZERO"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "JUMPI"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "INVALID"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "JUMPDEST"
										},
										{
											"begin": 765,
											"end": 782,
											"name": "EQ"
										},
										{
											"begin": 756,
											"end": 784,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 756,
											"end": 784,
											"name": "JUMPI"
										},
										{
											"begin": 756,
											"end": 784,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 756,
											"end": 784,
											"name": "DUP1"
										},
										{
											"begin": 756,
											"end": 784,
											"name": "REVERT"
										},
										{
											"begin": 756,
											"end": 784,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 756,
											"end": 784,
											"name": "JUMPDEST"
										},
										{
											"begin": 800,
											"end": 812,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 795,
											"end": 797,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 795,
											"end": 797,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "EXP"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "DUP2"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "SLOAD"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "DUP2"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "MUL"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "NOT"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "AND"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "SWAP1"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "DUP4"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "DUP2"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "GT"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "ISZERO"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "JUMPI"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "INVALID"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "JUMPDEST"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "MUL"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "OR"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "SWAP1"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "SSTORE"
										},
										{
											"begin": 795,
											"end": 812,
											"name": "POP"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 823,
											"end": 827,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 823,
											"end": 831,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 831,
											"name": "SWAP1"
										},
										{
											"begin": 823,
											"end": 831,
											"name": "SSTORE"
										},
										{
											"begin": 823,
											"end": 831,
											"name": "POP"
										},
										{
											"begin": 713,
											"end": 839,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"collect_1_N()": "953884de",
							"collect_1_Y()": "4c3bc76e",
							"collect_2_N()": "94f5c52d",
							"collect_2_Y()": "e3ed5166",
							"signal()": "640d090b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"collect_1_N\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collect_1_Y\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collect_2_N\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collect_2_Y\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/paylock.sol\":\"Paylock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/paylock.sol\":{\"keccak256\":\"0xca38d20cd21e070f137c7cc346fbe507cab53e0f0221a8f704e78e690bd6b38f\",\"urls\":[\"bzz-raw://6cf96bb9b7c2c376cfff2400f1f48c0c13cf2c3627daf32f6d29ff97314b5550\",\"dweb:/ipfs/QmVWJVCrfYxfgY2BXBMMPL6u6haERT4gNpQKCMNKK993dp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/paylock.sol:Paylock",
								"label": "disc",
								"offset": 0,
								"slot": "0",
								"type": "t_int256"
							},
							{
								"astId": 12,
								"contract": "contracts/paylock.sol:Paylock",
								"label": "st",
								"offset": 0,
								"slot": "1",
								"type": "t_enum(State)8"
							}
						],
						"types": {
							"t_enum(State)8": {
								"encoding": "inplace",
								"label": "enum Paylock.State",
								"numberOfBytes": "1"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/supplier.sol": {
				"Rental": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "rent_out_resource",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "retrieve_resource",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/supplier.sol\":466:1047  contract Rental {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/supplier.sol\":560:625  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/supplier.sol\":560:625  constructor() public {\r... */\n  pop\n    /* \"contracts/supplier.sol\":613:617  true */\n  0x01\n    /* \"contracts/supplier.sol\":592:610  resource_available */\n  0x00\n  0x14\n    /* \"contracts/supplier.sol\":592:617  resource_available = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/supplier.sol\":466:1047  contract Rental {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/supplier.sol\":466:1047  contract Rental {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/supplier.sol\":466:1047  contract Rental {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3695dd4b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbb150fbf\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/supplier.sol\":846:1038  function retrieve_resource() external {\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/supplier.sol\":637:838  function rent_out_resource() external {\r... */\n    tag_4:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/supplier.sol\":846:1038  function retrieve_resource() external {\r... */\n    tag_6:\n        /* \"contracts/supplier.sol\":925:930  false */\n      0x00\n        /* \"contracts/supplier.sol\":903:930  resource_available == false */\n      iszero\n      iszero\n        /* \"contracts/supplier.sol\":903:921  resource_available */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/supplier.sol\":903:930  resource_available == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/supplier.sol\":903:962  resource_available == false && msg.sender == resource_owner */\n      dup1\n      iszero\n      tag_10\n      jumpi\n      pop\n        /* \"contracts/supplier.sol\":948:962  resource_owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/supplier.sol\":934:962  msg.sender == resource_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/supplier.sol\":934:944  msg.sender */\n      caller\n        /* \"contracts/supplier.sol\":934:962  msg.sender == resource_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/supplier.sol\":903:962  resource_available == false && msg.sender == resource_owner */\n    tag_10:\n        /* \"contracts/supplier.sol\":895:963  require(resource_available == false && msg.sender == resource_owner) */\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n        /* \"contracts/supplier.sol\":1026:1030  true */\n      0x01\n        /* \"contracts/supplier.sol\":1005:1023  resource_available */\n      0x00\n      0x14\n        /* \"contracts/supplier.sol\":1005:1030  resource_available = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/supplier.sol\":846:1038  function retrieve_resource() external {\r... */\n      jump\t// out\n        /* \"contracts/supplier.sol\":637:838  function rent_out_resource() external {\r... */\n    tag_8:\n        /* \"contracts/supplier.sol\":716:720  true */\n      0x01\n        /* \"contracts/supplier.sol\":694:720  resource_available == true */\n      iszero\n      iszero\n        /* \"contracts/supplier.sol\":694:712  resource_available */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/supplier.sol\":694:720  resource_available == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/supplier.sol\":686:721  require(resource_available == true) */\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n        /* \"contracts/supplier.sol\":783:793  msg.sender */\n      caller\n        /* \"contracts/supplier.sol\":766:780  resource_owner */\n      0x00\n      dup1\n        /* \"contracts/supplier.sol\":766:793  resource_owner = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/supplier.sol\":825:830  false */\n      0x00\n        /* \"contracts/supplier.sol\":804:822  resource_available */\n      dup1\n      0x14\n        /* \"contracts/supplier.sol\":804:830  resource_available = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/supplier.sol\":637:838  function rent_out_resource() external {\r... */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eefb267027de8973b31c68786985e47e687c67a2661e52e5fe33820fbbb55f9264736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506001600060146101000a81548160ff0219169083151502179055506101968061003b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633695dd4b1461003b578063bb150fbf14610045575b600080fd5b61004361004f565b005b61004d6100e4565b005b60001515600060149054906101000a900460ff1615151480156100be57506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6100c757600080fd5b6001600060146101000a81548160ff021916908315150217905550565b60011515600060149054906101000a900460ff1615151461010457600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060146101000a81548160ff02191690831515021790555056fea2646970667358221220eefb267027de8973b31c68786985e47e687c67a2661e52e5fe33820fbbb55f9264736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x196 DUP1 PUSH2 0x3B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3695DD4B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xBB150FBF EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x4F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0xE4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0xBE JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0xFB 0x26 PUSH17 0x27DE8973B31C68786985E47E687C67A266 0x1E MSTORE 0xE5 INVALID CALLER DUP3 0xF 0xBB 0xB5 0x5F SWAP3 PUSH5 0x736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "466:581:1:-:0;;;560:65;8:9:-1;5:2;;;30:1;27;20:12;5:2;560:65:1;613:4;592:18;;:25;;;;;;;;;;;;;;;;;;466:581;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80633695dd4b1461003b578063bb150fbf14610045575b600080fd5b61004361004f565b005b61004d6100e4565b005b60001515600060149054906101000a900460ff1615151480156100be57506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6100c757600080fd5b6001600060146101000a81548160ff021916908315150217905550565b60011515600060149054906101000a900460ff1615151461010457600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060146101000a81548160ff02191690831515021790555056fea2646970667358221220eefb267027de8973b31c68786985e47e687c67a2661e52e5fe33820fbbb55f9264736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3695DD4B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xBB150FBF EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x4F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0xE4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0xBE JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0xFB 0x26 PUSH17 0x27DE8973B31C68786985E47E687C67A266 0x1E MSTORE 0xE5 INVALID CALLER DUP3 0xF 0xBB 0xB5 0x5F SWAP3 PUSH5 0x736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "466:581:1:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;466:581:1;;;;;;;;;;;;;;;;;;;;;;;;846:192;;;:::i;:::-;;637:201;;;:::i;:::-;;846:192;925:5;903:27;;:18;;;;;;;;;;;:27;;;:59;;;;;948:14;;;;;;;;;;;934:28;;:10;:28;;;903:59;895:68;;;;;;1026:4;1005:18;;:25;;;;;;;;;;;;;;;;;;846:192::o;637:201::-;716:4;694:26;;:18;;;;;;;;;;;:26;;;686:35;;;;;;783:10;766:14;;:27;;;;;;;;;;;;;;;;;;825:5;804:18;;:26;;;;;;;;;;;;;;;;;;637:201::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "81200",
								"executionCost": "21046",
								"totalCost": "102246"
							},
							"external": {
								"rent_out_resource()": "42848",
								"retrieve_resource()": "22838"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 466,
									"end": 1047,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 466,
									"end": 1047,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 466,
									"end": 1047,
									"name": "MSTORE"
								},
								{
									"begin": 560,
									"end": 625,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 560,
									"end": 625,
									"name": "POP"
								},
								{
									"begin": 613,
									"end": 617,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 592,
									"end": 610,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 592,
									"end": 610,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 592,
									"end": 617,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 592,
									"end": 617,
									"name": "EXP"
								},
								{
									"begin": 592,
									"end": 617,
									"name": "DUP2"
								},
								{
									"begin": 592,
									"end": 617,
									"name": "SLOAD"
								},
								{
									"begin": 592,
									"end": 617,
									"name": "DUP2"
								},
								{
									"begin": 592,
									"end": 617,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 592,
									"end": 617,
									"name": "MUL"
								},
								{
									"begin": 592,
									"end": 617,
									"name": "NOT"
								},
								{
									"begin": 592,
									"end": 617,
									"name": "AND"
								},
								{
									"begin": 592,
									"end": 617,
									"name": "SWAP1"
								},
								{
									"begin": 592,
									"end": 617,
									"name": "DUP4"
								},
								{
									"begin": 592,
									"end": 617,
									"name": "ISZERO"
								},
								{
									"begin": 592,
									"end": 617,
									"name": "ISZERO"
								},
								{
									"begin": 592,
									"end": 617,
									"name": "MUL"
								},
								{
									"begin": 592,
									"end": 617,
									"name": "OR"
								},
								{
									"begin": 592,
									"end": 617,
									"name": "SWAP1"
								},
								{
									"begin": 592,
									"end": 617,
									"name": "SSTORE"
								},
								{
									"begin": 592,
									"end": 617,
									"name": "POP"
								},
								{
									"begin": 466,
									"end": 1047,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 466,
									"end": 1047,
									"name": "DUP1"
								},
								{
									"begin": 466,
									"end": 1047,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 466,
									"end": 1047,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 466,
									"end": 1047,
									"name": "CODECOPY"
								},
								{
									"begin": 466,
									"end": 1047,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 466,
									"end": 1047,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eefb267027de8973b31c68786985e47e687c67a2661e52e5fe33820fbbb55f9264736f6c63430006000033",
									".code": [
										{
											"begin": 466,
											"end": 1047,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "MSTORE"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "POP"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "LT"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "JUMPI"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "SHR"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "DUP1"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "PUSH",
											"value": "3695DD4B"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "EQ"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "JUMPI"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "DUP1"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "PUSH",
											"value": "BB150FBF"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "EQ"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "JUMPI"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "JUMPDEST"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "DUP1"
										},
										{
											"begin": 466,
											"end": 1047,
											"name": "REVERT"
										},
										{
											"begin": 846,
											"end": 1038,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 846,
											"end": 1038,
											"name": "JUMPDEST"
										},
										{
											"begin": 846,
											"end": 1038,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 846,
											"end": 1038,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 846,
											"end": 1038,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 846,
											"end": 1038,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 846,
											"end": 1038,
											"name": "JUMPDEST"
										},
										{
											"begin": 846,
											"end": 1038,
											"name": "STOP"
										},
										{
											"begin": 637,
											"end": 838,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 637,
											"end": 838,
											"name": "JUMPDEST"
										},
										{
											"begin": 637,
											"end": 838,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 637,
											"end": 838,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 637,
											"end": 838,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 637,
											"end": 838,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 637,
											"end": 838,
											"name": "JUMPDEST"
										},
										{
											"begin": 637,
											"end": 838,
											"name": "STOP"
										},
										{
											"begin": 846,
											"end": 1038,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 846,
											"end": 1038,
											"name": "JUMPDEST"
										},
										{
											"begin": 925,
											"end": 930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 903,
											"end": 930,
											"name": "ISZERO"
										},
										{
											"begin": 903,
											"end": 930,
											"name": "ISZERO"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "SWAP1"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "SLOAD"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "SWAP1"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "EXP"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "SWAP1"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "DIV"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 903,
											"end": 921,
											"name": "AND"
										},
										{
											"begin": 903,
											"end": 930,
											"name": "ISZERO"
										},
										{
											"begin": 903,
											"end": 930,
											"name": "ISZERO"
										},
										{
											"begin": 903,
											"end": 930,
											"name": "EQ"
										},
										{
											"begin": 903,
											"end": 962,
											"name": "DUP1"
										},
										{
											"begin": 903,
											"end": 962,
											"name": "ISZERO"
										},
										{
											"begin": 903,
											"end": 962,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 903,
											"end": 962,
											"name": "JUMPI"
										},
										{
											"begin": 903,
											"end": 962,
											"name": "POP"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "DUP1"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "SLOAD"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "EXP"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "DIV"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "AND"
										},
										{
											"begin": 934,
											"end": 962,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 934,
											"end": 962,
											"name": "AND"
										},
										{
											"begin": 934,
											"end": 944,
											"name": "CALLER"
										},
										{
											"begin": 934,
											"end": 962,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 934,
											"end": 962,
											"name": "AND"
										},
										{
											"begin": 934,
											"end": 962,
											"name": "EQ"
										},
										{
											"begin": 903,
											"end": 962,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 903,
											"end": 962,
											"name": "JUMPDEST"
										},
										{
											"begin": 895,
											"end": 963,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 895,
											"end": 963,
											"name": "JUMPI"
										},
										{
											"begin": 895,
											"end": 963,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 895,
											"end": 963,
											"name": "DUP1"
										},
										{
											"begin": 895,
											"end": 963,
											"name": "REVERT"
										},
										{
											"begin": 895,
											"end": 963,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 895,
											"end": 963,
											"name": "JUMPDEST"
										},
										{
											"begin": 1026,
											"end": 1030,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1005,
											"end": 1023,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1023,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "EXP"
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "DUP2"
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "SLOAD"
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "DUP2"
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "MUL"
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "NOT"
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "AND"
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "DUP4"
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "ISZERO"
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "ISZERO"
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "MUL"
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "OR"
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "SWAP1"
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "SSTORE"
										},
										{
											"begin": 1005,
											"end": 1030,
											"name": "POP"
										},
										{
											"begin": 846,
											"end": 1038,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 637,
											"end": 838,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 637,
											"end": 838,
											"name": "JUMPDEST"
										},
										{
											"begin": 716,
											"end": 720,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 694,
											"end": 720,
											"name": "ISZERO"
										},
										{
											"begin": 694,
											"end": 720,
											"name": "ISZERO"
										},
										{
											"begin": 694,
											"end": 712,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 694,
											"end": 712,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 694,
											"end": 712,
											"name": "SWAP1"
										},
										{
											"begin": 694,
											"end": 712,
											"name": "SLOAD"
										},
										{
											"begin": 694,
											"end": 712,
											"name": "SWAP1"
										},
										{
											"begin": 694,
											"end": 712,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 694,
											"end": 712,
											"name": "EXP"
										},
										{
											"begin": 694,
											"end": 712,
											"name": "SWAP1"
										},
										{
											"begin": 694,
											"end": 712,
											"name": "DIV"
										},
										{
											"begin": 694,
											"end": 712,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 694,
											"end": 712,
											"name": "AND"
										},
										{
											"begin": 694,
											"end": 720,
											"name": "ISZERO"
										},
										{
											"begin": 694,
											"end": 720,
											"name": "ISZERO"
										},
										{
											"begin": 694,
											"end": 720,
											"name": "EQ"
										},
										{
											"begin": 686,
											"end": 721,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 686,
											"end": 721,
											"name": "JUMPI"
										},
										{
											"begin": 686,
											"end": 721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 686,
											"end": 721,
											"name": "DUP1"
										},
										{
											"begin": 686,
											"end": 721,
											"name": "REVERT"
										},
										{
											"begin": 686,
											"end": 721,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 686,
											"end": 721,
											"name": "JUMPDEST"
										},
										{
											"begin": 783,
											"end": 793,
											"name": "CALLER"
										},
										{
											"begin": 766,
											"end": 780,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 766,
											"end": 780,
											"name": "DUP1"
										},
										{
											"begin": 766,
											"end": 793,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 766,
											"end": 793,
											"name": "EXP"
										},
										{
											"begin": 766,
											"end": 793,
											"name": "DUP2"
										},
										{
											"begin": 766,
											"end": 793,
											"name": "SLOAD"
										},
										{
											"begin": 766,
											"end": 793,
											"name": "DUP2"
										},
										{
											"begin": 766,
											"end": 793,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 766,
											"end": 793,
											"name": "MUL"
										},
										{
											"begin": 766,
											"end": 793,
											"name": "NOT"
										},
										{
											"begin": 766,
											"end": 793,
											"name": "AND"
										},
										{
											"begin": 766,
											"end": 793,
											"name": "SWAP1"
										},
										{
											"begin": 766,
											"end": 793,
											"name": "DUP4"
										},
										{
											"begin": 766,
											"end": 793,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 766,
											"end": 793,
											"name": "AND"
										},
										{
											"begin": 766,
											"end": 793,
											"name": "MUL"
										},
										{
											"begin": 766,
											"end": 793,
											"name": "OR"
										},
										{
											"begin": 766,
											"end": 793,
											"name": "SWAP1"
										},
										{
											"begin": 766,
											"end": 793,
											"name": "SSTORE"
										},
										{
											"begin": 766,
											"end": 793,
											"name": "POP"
										},
										{
											"begin": 825,
											"end": 830,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 804,
											"end": 822,
											"name": "DUP1"
										},
										{
											"begin": 804,
											"end": 822,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 804,
											"end": 830,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 804,
											"end": 830,
											"name": "EXP"
										},
										{
											"begin": 804,
											"end": 830,
											"name": "DUP2"
										},
										{
											"begin": 804,
											"end": 830,
											"name": "SLOAD"
										},
										{
											"begin": 804,
											"end": 830,
											"name": "DUP2"
										},
										{
											"begin": 804,
											"end": 830,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 804,
											"end": 830,
											"name": "MUL"
										},
										{
											"begin": 804,
											"end": 830,
											"name": "NOT"
										},
										{
											"begin": 804,
											"end": 830,
											"name": "AND"
										},
										{
											"begin": 804,
											"end": 830,
											"name": "SWAP1"
										},
										{
											"begin": 804,
											"end": 830,
											"name": "DUP4"
										},
										{
											"begin": 804,
											"end": 830,
											"name": "ISZERO"
										},
										{
											"begin": 804,
											"end": 830,
											"name": "ISZERO"
										},
										{
											"begin": 804,
											"end": 830,
											"name": "MUL"
										},
										{
											"begin": 804,
											"end": 830,
											"name": "OR"
										},
										{
											"begin": 804,
											"end": 830,
											"name": "SWAP1"
										},
										{
											"begin": 804,
											"end": 830,
											"name": "SSTORE"
										},
										{
											"begin": 804,
											"end": 830,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 838,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"rent_out_resource()": "bb150fbf",
							"retrieve_resource()": "3695dd4b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"rent_out_resource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieve_resource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/supplier.sol\":\"Rental\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/paylock.sol\":{\"keccak256\":\"0xca38d20cd21e070f137c7cc346fbe507cab53e0f0221a8f704e78e690bd6b38f\",\"urls\":[\"bzz-raw://6cf96bb9b7c2c376cfff2400f1f48c0c13cf2c3627daf32f6d29ff97314b5550\",\"dweb:/ipfs/QmVWJVCrfYxfgY2BXBMMPL6u6haERT4gNpQKCMNKK993dp\"]},\"contracts/supplier.sol\":{\"keccak256\":\"0xb7c1cd90019d06ebd3aeb50f1e3965636e14b44a4a450af3062774b0795d9b2f\",\"urls\":[\"bzz-raw://79ba089f4dcbaad61f32679dc22f12e4c88b07f6782ae6ffcbe66c86fd0635cf\",\"dweb:/ipfs/QmTrWHoe6ia8R6LFuMJ3x7PGZzEgq2JC2bL9aGdS3cHiCx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 177,
								"contract": "contracts/supplier.sol:Rental",
								"label": "resource_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 179,
								"contract": "contracts/supplier.sol:Rental",
								"label": "resource_available",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Supplier": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pp",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "finish",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/supplier.sol\":100:462  contract Supplier {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/supplier.sol\":220:314  constructor(address pp) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/supplier.sol\":220:314  constructor(address pp) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"contracts/supplier.sol\":220:314  constructor(address pp) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/supplier.sol\":274:276  pp */\n  dup1\n    /* \"contracts/supplier.sol\":262:263  p */\n  0x00\n  dup1\n    /* \"contracts/supplier.sol\":262:277  p = Paylock(pp) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/supplier.sol\":293:306  State.Working */\n  0x00\n    /* \"contracts/supplier.sol\":288:290  st */\n  dup1\n  0x14\n    /* \"contracts/supplier.sol\":288:306  st = State.Working */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x01\n  dup2\n  gt\n  iszero\n  tag_5\n  jumpi\n  invalid\ntag_5:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/supplier.sol\":220:314  constructor(address pp) public {\r... */\n  pop\n    /* \"contracts/supplier.sol\":100:462  contract Supplier {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/supplier.sol\":100:462  contract Supplier {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/supplier.sol\":100:462  contract Supplier {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd56b2889\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/supplier.sol\":326:453  function finish() external {\r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"contracts/supplier.sol\":379:392  State.Working */\n      0x00\n        /* \"contracts/supplier.sol\":373:392  st == State.Working */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_7\n      jumpi\n      invalid\n    tag_7:\n        /* \"contracts/supplier.sol\":373:375  st */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/supplier.sol\":373:392  st == State.Working */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_8\n      jumpi\n      invalid\n    tag_8:\n      eq\n        /* \"contracts/supplier.sol\":364:393  require (st == State.Working) */\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n        /* \"contracts/supplier.sol\":404:405  p */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/supplier.sol\":404:412  p.signal */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x640d090b\n        /* \"contracts/supplier.sol\":404:414  p.signal() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_10:\n        /* \"contracts/supplier.sol\":404:414  p.signal() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"contracts/supplier.sol\":404:414  p.signal() */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/supplier.sol\":430:445  State.Completed */\n      0x01\n        /* \"contracts/supplier.sol\":425:427  st */\n      0x00\n      0x14\n        /* \"contracts/supplier.sol\":425:445  st = State.Completed */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x01\n      dup2\n      gt\n      iszero\n      tag_13\n      jumpi\n      invalid\n    tag_13:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/supplier.sol\":326:453  function finish() external {\r... */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209bc5160935c4ade7a3ae3b68ce5fd14b99a8ece9e15106c94db9373c38983b3a64736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516102003803806102008339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060146101000a81548160ff021916908360018111156100a257fe5b021790555050610149806100b76000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d56b288914610030575b600080fd5b61003861003a565b005b6000600181111561004757fe5b600060149054906101000a900460ff16600181111561006257fe5b1461006c57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663640d090b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100d557600080fd5b505af11580156100e9573d6000803e3d6000fd5b505050506001600060146101000a81548160ff0219169083600181111561010c57fe5b021790555056fea26469706673582212209bc5160935c4ade7a3ae3b68ce5fd14b99a8ece9e15106c94db9373c38983b3a64736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x200 CODESIZE SUB DUP1 PUSH2 0x200 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xA2 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH2 0x149 DUP1 PUSH2 0xB7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD56B2889 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x47 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x62 JUMPI INVALID JUMPDEST EQ PUSH2 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x640D090B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x10C JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xC5 AND MULMOD CALLDATALOAD 0xC4 0xAD 0xE7 LOG3 0xAE EXTCODESIZE PUSH9 0xCE5FD14B99A8ECE9E1 MLOAD MOD 0xC9 0x4D 0xB9 CALLDATACOPY EXTCODECOPY CODESIZE SWAP9 EXTCODESIZE GASPRICE PUSH5 0x736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "100:362:1:-:0;;;220:94;8:9:-1;5:2;;;30:1;27;20:12;5:2;220:94:1;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;220:94:1;;;;;;;;;;;;;;;;274:2;262:1;;:15;;;;;;;;;;;;;;;;;;293:13;288:2;;:18;;;;;;;;;;;;;;;;;;;;;;;;220:94;100:362;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d56b288914610030575b600080fd5b61003861003a565b005b6000600181111561004757fe5b600060149054906101000a900460ff16600181111561006257fe5b1461006c57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663640d090b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100d557600080fd5b505af11580156100e9573d6000803e3d6000fd5b505050506001600060146101000a81548160ff0219169083600181111561010c57fe5b021790555056fea26469706673582212209bc5160935c4ade7a3ae3b68ce5fd14b99a8ece9e15106c94db9373c38983b3a64736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD56B2889 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x47 JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x62 JUMPI INVALID JUMPDEST EQ PUSH2 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x640D090B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x10C JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xC5 AND MULMOD CALLDATALOAD 0xC4 0xAD 0xE7 LOG3 0xAE EXTCODESIZE PUSH9 0xCE5FD14B99A8ECE9E1 MLOAD MOD 0xC9 0x4D 0xB9 CALLDATACOPY EXTCODECOPY CODESIZE SWAP9 EXTCODESIZE GASPRICE PUSH5 0x736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "100:362:1:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;100:362:1;;;;;;;;;;;;;;;;;;;326:127;;;:::i;:::-;;;379:13;373:19;;;;;;;;:2;;;;;;;;;;;:19;;;;;;;;;364:29;;;;;;404:1;;;;;;;;;;;:8;;;:10;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;404:10:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;404:10:1;;;;430:15;425:2;;:20;;;;;;;;;;;;;;;;;;;;;;;;326:127::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "65800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"finish()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 100,
									"end": 462,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 100,
									"end": 462,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 100,
									"end": 462,
									"name": "MSTORE"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "POP"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "MLOAD"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "PUSHSIZE"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "CODESIZE"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "SUB"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "DUP1"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "PUSHSIZE"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "DUP4"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "CODECOPY"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "DUP2"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "DUP2"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "ADD"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "DUP2"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "ADD"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "SWAP1"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "DUP1"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "DUP1"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "MLOAD"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "SWAP1"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "ADD"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "SWAP1"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "SWAP3"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "SWAP2"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "SWAP1"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "POP"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "POP"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "POP"
								},
								{
									"begin": 274,
									"end": 276,
									"name": "DUP1"
								},
								{
									"begin": 262,
									"end": 263,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 262,
									"end": 263,
									"name": "DUP1"
								},
								{
									"begin": 262,
									"end": 277,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 262,
									"end": 277,
									"name": "EXP"
								},
								{
									"begin": 262,
									"end": 277,
									"name": "DUP2"
								},
								{
									"begin": 262,
									"end": 277,
									"name": "SLOAD"
								},
								{
									"begin": 262,
									"end": 277,
									"name": "DUP2"
								},
								{
									"begin": 262,
									"end": 277,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 262,
									"end": 277,
									"name": "MUL"
								},
								{
									"begin": 262,
									"end": 277,
									"name": "NOT"
								},
								{
									"begin": 262,
									"end": 277,
									"name": "AND"
								},
								{
									"begin": 262,
									"end": 277,
									"name": "SWAP1"
								},
								{
									"begin": 262,
									"end": 277,
									"name": "DUP4"
								},
								{
									"begin": 262,
									"end": 277,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 262,
									"end": 277,
									"name": "AND"
								},
								{
									"begin": 262,
									"end": 277,
									"name": "MUL"
								},
								{
									"begin": 262,
									"end": 277,
									"name": "OR"
								},
								{
									"begin": 262,
									"end": 277,
									"name": "SWAP1"
								},
								{
									"begin": 262,
									"end": 277,
									"name": "SSTORE"
								},
								{
									"begin": 262,
									"end": 277,
									"name": "POP"
								},
								{
									"begin": 293,
									"end": 306,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 290,
									"name": "DUP1"
								},
								{
									"begin": 288,
									"end": 290,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "EXP"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "DUP2"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "SLOAD"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "DUP2"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "MUL"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "NOT"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "AND"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "SWAP1"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "DUP4"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "DUP2"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "GT"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "ISZERO"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "JUMPI"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "INVALID"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "JUMPDEST"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "MUL"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "OR"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "SWAP1"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "SSTORE"
								},
								{
									"begin": 288,
									"end": 306,
									"name": "POP"
								},
								{
									"begin": 220,
									"end": 314,
									"name": "POP"
								},
								{
									"begin": 100,
									"end": 462,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 100,
									"end": 462,
									"name": "DUP1"
								},
								{
									"begin": 100,
									"end": 462,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 100,
									"end": 462,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 100,
									"end": 462,
									"name": "CODECOPY"
								},
								{
									"begin": 100,
									"end": 462,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 100,
									"end": 462,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209bc5160935c4ade7a3ae3b68ce5fd14b99a8ece9e15106c94db9373c38983b3a64736f6c63430006000033",
									".code": [
										{
											"begin": 100,
											"end": 462,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "MSTORE"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "POP"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "LT"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "JUMPI"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "SHR"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "DUP1"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "PUSH",
											"value": "D56B2889"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "EQ"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "JUMPI"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "JUMPDEST"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "DUP1"
										},
										{
											"begin": 100,
											"end": 462,
											"name": "REVERT"
										},
										{
											"begin": 326,
											"end": 453,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 326,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 326,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 326,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 326,
											"end": 453,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 326,
											"end": 453,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 326,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 326,
											"end": 453,
											"name": "STOP"
										},
										{
											"begin": 326,
											"end": 453,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 326,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 379,
											"end": 392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 373,
											"end": 392,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 373,
											"end": 392,
											"name": "DUP2"
										},
										{
											"begin": 373,
											"end": 392,
											"name": "GT"
										},
										{
											"begin": 373,
											"end": 392,
											"name": "ISZERO"
										},
										{
											"begin": 373,
											"end": 392,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 373,
											"end": 392,
											"name": "JUMPI"
										},
										{
											"begin": 373,
											"end": 392,
											"name": "INVALID"
										},
										{
											"begin": 373,
											"end": 392,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 373,
											"end": 392,
											"name": "JUMPDEST"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "SWAP1"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "SLOAD"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "SWAP1"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "EXP"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "SWAP1"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "DIV"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "AND"
										},
										{
											"begin": 373,
											"end": 392,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 373,
											"end": 392,
											"name": "DUP2"
										},
										{
											"begin": 373,
											"end": 392,
											"name": "GT"
										},
										{
											"begin": 373,
											"end": 392,
											"name": "ISZERO"
										},
										{
											"begin": 373,
											"end": 392,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 373,
											"end": 392,
											"name": "JUMPI"
										},
										{
											"begin": 373,
											"end": 392,
											"name": "INVALID"
										},
										{
											"begin": 373,
											"end": 392,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 373,
											"end": 392,
											"name": "JUMPDEST"
										},
										{
											"begin": 373,
											"end": 392,
											"name": "EQ"
										},
										{
											"begin": 364,
											"end": 393,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 364,
											"end": 393,
											"name": "JUMPI"
										},
										{
											"begin": 364,
											"end": 393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 364,
											"end": 393,
											"name": "DUP1"
										},
										{
											"begin": 364,
											"end": 393,
											"name": "REVERT"
										},
										{
											"begin": 364,
											"end": 393,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 364,
											"end": 393,
											"name": "JUMPDEST"
										},
										{
											"begin": 404,
											"end": 405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 404,
											"end": 405,
											"name": "DUP1"
										},
										{
											"begin": 404,
											"end": 405,
											"name": "SWAP1"
										},
										{
											"begin": 404,
											"end": 405,
											"name": "SLOAD"
										},
										{
											"begin": 404,
											"end": 405,
											"name": "SWAP1"
										},
										{
											"begin": 404,
											"end": 405,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 404,
											"end": 405,
											"name": "EXP"
										},
										{
											"begin": 404,
											"end": 405,
											"name": "SWAP1"
										},
										{
											"begin": 404,
											"end": 405,
											"name": "DIV"
										},
										{
											"begin": 404,
											"end": 405,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 405,
											"name": "AND"
										},
										{
											"begin": 404,
											"end": 412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 412,
											"name": "AND"
										},
										{
											"begin": 404,
											"end": 412,
											"name": "PUSH",
											"value": "640D090B"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "MLOAD"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "DUP2"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "AND"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "SHL"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "DUP2"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "MSTORE"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "ADD"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "MLOAD"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "DUP1"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "DUP4"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "SUB"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "DUP2"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "DUP8"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "DUP1"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "POP"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "GAS"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "CALL"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "POP"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "POP"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "POP"
										},
										{
											"begin": 404,
											"end": 414,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 445,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 425,
											"end": 427,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 425,
											"end": 427,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "EXP"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "DUP2"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "SLOAD"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "DUP2"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "MUL"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "NOT"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "AND"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "DUP4"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "DUP2"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "GT"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "ISZERO"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "JUMPI"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "INVALID"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "JUMPDEST"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "MUL"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "OR"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "SSTORE"
										},
										{
											"begin": 425,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 326,
											"end": 453,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"finish()": "d56b2889"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pp\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"finish\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/supplier.sol\":\"Supplier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/paylock.sol\":{\"keccak256\":\"0xca38d20cd21e070f137c7cc346fbe507cab53e0f0221a8f704e78e690bd6b38f\",\"urls\":[\"bzz-raw://6cf96bb9b7c2c376cfff2400f1f48c0c13cf2c3627daf32f6d29ff97314b5550\",\"dweb:/ipfs/QmVWJVCrfYxfgY2BXBMMPL6u6haERT4gNpQKCMNKK993dp\"]},\"contracts/supplier.sol\":{\"keccak256\":\"0xb7c1cd90019d06ebd3aeb50f1e3965636e14b44a4a450af3062774b0795d9b2f\",\"urls\":[\"bzz-raw://79ba089f4dcbaad61f32679dc22f12e4c88b07f6782ae6ffcbe66c86fd0635cf\",\"dweb:/ipfs/QmTrWHoe6ia8R6LFuMJ3x7PGZzEgq2JC2bL9aGdS3cHiCx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 131,
								"contract": "contracts/supplier.sol:Supplier",
								"label": "p",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(Paylock)126"
							},
							{
								"astId": 136,
								"contract": "contracts/supplier.sol:Supplier",
								"label": "st",
								"offset": 20,
								"slot": "0",
								"type": "t_enum(State)134"
							}
						],
						"types": {
							"t_contract(Paylock)126": {
								"encoding": "inplace",
								"label": "contract Paylock",
								"numberOfBytes": "20"
							},
							"t_enum(State)134": {
								"encoding": "inplace",
								"label": "enum Supplier.State",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/paylock.sol": {
				"ast": {
					"absolutePath": "contracts/paylock.sol",
					"exportedSymbols": {
						"Paylock": [
							126
						]
					},
					"id": 127,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Paylock",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Paylock.State",
									"id": 8,
									"members": [
										{
											"id": 2,
											"name": "Working",
											"nodeType": "EnumValue",
											"src": "116:7:0"
										},
										{
											"id": 3,
											"name": "Completed",
											"nodeType": "EnumValue",
											"src": "126:9:0"
										},
										{
											"id": 4,
											"name": "Done_1",
											"nodeType": "EnumValue",
											"src": "138:6:0"
										},
										{
											"id": 5,
											"name": "Delay",
											"nodeType": "EnumValue",
											"src": "147:5:0"
										},
										{
											"id": 6,
											"name": "Done_2",
											"nodeType": "EnumValue",
											"src": "155:6:0"
										},
										{
											"id": 7,
											"name": "Forfeit",
											"nodeType": "EnumValue",
											"src": "164:7:0"
										}
									],
									"name": "State",
									"nodeType": "EnumDefinition",
									"src": "103:70:0"
								},
								{
									"constant": false,
									"id": 10,
									"name": "disc",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 126,
									"src": "185:8:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 9,
										"name": "int",
										"nodeType": "ElementaryTypeName",
										"src": "185:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"name": "st",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 126,
									"src": "200:8:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_State_$8",
										"typeString": "enum Paylock.State"
									},
									"typeName": {
										"contractScope": null,
										"id": 11,
										"name": "State",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 8,
										"src": "200:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_State_$8",
											"typeString": "enum Paylock.State"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "242:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 15,
														"name": "st",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "253:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 16,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "258:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																"typeString": "type(enum Paylock.State)"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Working",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "258:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"src": "253:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$8",
														"typeString": "enum Paylock.State"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "253:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 20,
														"name": "disc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "282:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "289:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "282:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "282:8:0"
											}
										]
									},
									"documentation": null,
									"id": 25,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "232:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "242:0:0"
									},
									"scope": 126,
									"src": "221:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "331:100:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$8",
																"typeString": "enum Paylock.State"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 29,
																"name": "st",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "351:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 30,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "357:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																		"typeString": "type(enum Paylock.State)"
																	}
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Working",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "357:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"src": "351:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 28,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															244,
															245
														],
														"referencedDeclaration": 244,
														"src": "342:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "342:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "342:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 35,
														"name": "st",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "383:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 36,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "388:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																"typeString": "type(enum Paylock.State)"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Completed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "388:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"src": "383:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$8",
														"typeString": "enum Paylock.State"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "383:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 40,
														"name": "disc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "414:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3130",
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "421:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "414:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "414:9:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "640d090b",
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "signal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "321:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "331:0:0"
									},
									"scope": 126,
									"src": "306:125:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "469:99:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$8",
																"typeString": "enum Paylock.State"
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 49,
																"name": "st",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "489:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 50,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "495:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																		"typeString": "type(enum Paylock.State)"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Completed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "495:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"src": "489:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 48,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															244,
															245
														],
														"referencedDeclaration": 244,
														"src": "480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "480:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "480:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 55,
														"name": "st",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "523:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 56,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "528:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																"typeString": "type(enum Paylock.State)"
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Done_1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "528:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"src": "523:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$8",
														"typeString": "enum Paylock.State"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "523:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 60,
														"name": "disc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "551:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3130",
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "558:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "551:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "551:9:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4c3bc76e",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "collect_1_Y",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "459:2:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:0:0"
									},
									"scope": 126,
									"src": "439:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "608:97:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$8",
																"typeString": "enum Paylock.State"
															},
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 69,
																"name": "st",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "628:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 70,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "634:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																		"typeString": "type(enum Paylock.State)"
																	}
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Completed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "634:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"src": "628:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															244,
															245
														],
														"referencedDeclaration": 244,
														"src": "619:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "619:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "619:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 75,
														"name": "st",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "662:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 76,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "667:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																"typeString": "type(enum Paylock.State)"
															}
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Delay",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "667:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"src": "662:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$8",
														"typeString": "enum Paylock.State"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "662:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 80,
														"name": "disc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "689:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "35",
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "696:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "689:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "689:8:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "953884de",
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "collect_1_N",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "596:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "608:0:0"
									},
									"scope": 126,
									"src": "576:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "745:94:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$8",
																"typeString": "enum Paylock.State"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 89,
																"name": "st",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "765:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 90,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "771:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																		"typeString": "type(enum Paylock.State)"
																	}
																},
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Delay",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "771:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"src": "765:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															244,
															245
														],
														"referencedDeclaration": 244,
														"src": "756:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "756:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "756:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 95,
														"name": "st",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "795:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 96,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "800:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																"typeString": "type(enum Paylock.State)"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Done_2",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "800:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"src": "795:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$8",
														"typeString": "enum Paylock.State"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "795:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 100,
														"name": "disc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "823:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "35",
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "830:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "823:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "823:8:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "e3ed5166",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "collect_2_Y",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:2:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "745:0:0"
									},
									"scope": 126,
									"src": "713:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "879:95:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$8",
																"typeString": "enum Paylock.State"
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 109,
																"name": "st",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "899:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 110,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "905:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																		"typeString": "type(enum Paylock.State)"
																	}
																},
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Delay",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "905:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"src": "899:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															244,
															245
														],
														"referencedDeclaration": 244,
														"src": "890:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "890:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 114,
												"nodeType": "ExpressionStatement",
												"src": "890:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 115,
														"name": "st",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "929:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 116,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "934:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																"typeString": "type(enum Paylock.State)"
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Forfeit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "934:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"src": "929:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$8",
														"typeString": "enum Paylock.State"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "929:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 120,
														"name": "disc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "958:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "965:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "958:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "958:8:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "94f5c52d",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "collect_2_N",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "867:2:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "879:0:0"
									},
									"scope": 126,
									"src": "847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 127,
							"src": "73:906:0"
						}
					],
					"src": "37:942:0"
				},
				"id": 0
			},
			"contracts/supplier.sol": {
				"ast": {
					"absolutePath": "contracts/supplier.sol",
					"exportedSymbols": {
						"Rental": [
							226
						],
						"Supplier": [
							175
						]
					},
					"id": 227,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:32:1"
						},
						{
							"absolutePath": "contracts/paylock.sol",
							"file": "./paylock.sol",
							"id": 129,
							"nodeType": "ImportDirective",
							"scope": 227,
							"sourceUnit": 127,
							"src": "73:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 175,
							"linearizedBaseContracts": [
								175
							],
							"name": "Supplier",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 131,
									"name": "p",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 175,
									"src": "131:9:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Paylock_$126",
										"typeString": "contract Paylock"
									},
									"typeName": {
										"contractScope": null,
										"id": 130,
										"name": "Paylock",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 126,
										"src": "131:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Paylock_$126",
											"typeString": "contract Paylock"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"canonicalName": "Supplier.State",
									"id": 134,
									"members": [
										{
											"id": 132,
											"name": "Working",
											"nodeType": "EnumValue",
											"src": "166:7:1"
										},
										{
											"id": 133,
											"name": "Completed",
											"nodeType": "EnumValue",
											"src": "176:9:1"
										}
									],
									"name": "State",
									"nodeType": "EnumDefinition",
									"src": "153:34:1"
								},
								{
									"constant": false,
									"id": 136,
									"name": "st",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 175,
									"src": "199:8:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_State_$134",
										"typeString": "enum Supplier.State"
									},
									"typeName": {
										"contractScope": null,
										"id": 135,
										"name": "State",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 134,
										"src": "199:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_State_$134",
											"typeString": "enum Supplier.State"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "251:63:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 141,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "262:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Paylock_$126",
															"typeString": "contract Paylock"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 143,
																"name": "pp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "274:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 142,
															"name": "Paylock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "266:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Paylock_$126_$",
																"typeString": "type(contract Paylock)"
															}
														},
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "266:11:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Paylock_$126",
															"typeString": "contract Paylock"
														}
													},
													"src": "262:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Paylock_$126",
														"typeString": "contract Paylock"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "262:15:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 147,
														"name": "st",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "288:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$134",
															"typeString": "enum Supplier.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 148,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "293:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$134_$",
																"typeString": "type(enum Supplier.State)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Working",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "293:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$134",
															"typeString": "enum Supplier.State"
														}
													},
													"src": "288:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$134",
														"typeString": "enum Supplier.State"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "288:18:1"
											}
										]
									},
									"documentation": null,
									"id": 153,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"name": "pp",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "232:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "232:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "231:12:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:0:1"
									},
									"scope": 175,
									"src": "220:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "353:100:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$134",
																"typeString": "enum Supplier.State"
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 157,
																"name": "st",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "373:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$134",
																	"typeString": "enum Supplier.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 158,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "379:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$134_$",
																		"typeString": "type(enum Supplier.State)"
																	}
																},
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Working",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "379:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$134",
																	"typeString": "enum Supplier.State"
																}
															},
															"src": "373:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															244,
															245
														],
														"referencedDeclaration": 244,
														"src": "364:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "364:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "364:29:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 163,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "404:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Paylock_$126",
																"typeString": "contract Paylock"
															}
														},
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "signal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 45,
														"src": "404:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "404:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "404:10:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 168,
														"name": "st",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "425:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$134",
															"typeString": "enum Supplier.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 169,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "430:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$134_$",
																"typeString": "type(enum Supplier.State)"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Completed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "430:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$134",
															"typeString": "enum Supplier.State"
														}
													},
													"src": "425:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$134",
														"typeString": "enum Supplier.State"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "425:20:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d56b2889",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "finish",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "341:2:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "353:0:1"
									},
									"scope": 175,
									"src": "326:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 227,
							"src": "100:362:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 226,
							"linearizedBaseContracts": [
								226
							],
							"name": "Rental",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 177,
									"name": "resource_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 226,
									"src": "495:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 176,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "495:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 179,
									"name": "resource_available",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 226,
									"src": "524:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 178,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "524:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "581:44:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 182,
														"name": "resource_available",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "592:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "613:4:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "592:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "592:25:1"
											}
										]
									},
									"documentation": null,
									"id": 187,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "571:2:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "581:0:1"
									},
									"scope": 226,
									"src": "560:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "675:163:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 191,
																"name": "resource_available",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "694:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "716:4:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "694:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 190,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															244,
															245
														],
														"referencedDeclaration": 244,
														"src": "686:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "686:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "686:35:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 196,
														"name": "resource_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "766:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 197,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "783:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "783:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "766:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "766:27:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 201,
														"name": "resource_available",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "804:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "825:5:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "804:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "804:26:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "bb150fbf",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rent_out_resource",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "663:2:1"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:0:1"
									},
									"scope": 226,
									"src": "637:201:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "884:154:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 210,
																	"name": "resource_available",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "903:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "925:5:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "903:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 213,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "934:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "934:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 215,
																	"name": "resource_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "948:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "934:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "903:59:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															244,
															245
														],
														"referencedDeclaration": 244,
														"src": "895:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "895:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "895:68:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 220,
														"name": "resource_available",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "1005:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1026:4:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1005:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "1005:25:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3695dd4b",
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "retrieve_resource",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "872:2:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "884:0:1"
									},
									"scope": 226,
									"src": "846:192:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 227,
							"src": "466:581:1"
						}
					],
					"src": "37:1010:1"
				},
				"id": 1
			}
		}
	}
}