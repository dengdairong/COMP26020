{
	"id": "fb6e4ae23602636dc0c933900d5fedaf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.0",
	"solcLongVersion": "0.6.0+commit.26b70077",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/paylock.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.4.16 <0.7.0;\r\n\r\ncontract Paylock {\r\n    \r\n    enum State { Working , Completed , Done_1 , Delay , Done_2 , Forfeit }\r\n    \r\n    int disc;\r\n    State st;\r\n\r\n    int clock;\r\n    int timeUnit = 4;\r\n\r\n    address timeAdd;\r\n    \r\n    constructor(address _timeAdd) public {\r\n        st = State.Working;\r\n        disc = 0;\r\n        clock = 0;\r\n        timeAdd = _timeAdd;\r\n    }\r\n\r\n    function signal() public {\r\n        require( st == State.Working );\r\n        st = State.Completed;\r\n        disc = 10;\r\n    }\r\n\r\n    function collect_1_Y() public {\r\n        require( st == State.Completed );\r\n        require(clock < timeUnit);\r\n        st = State.Done_1;\r\n        disc = 10;\r\n    }\r\n\r\n    function collect_1_N() external {\r\n        require( st == State.Completed );\r\n        require(clock >= timeUnit);\r\n        st = State.Delay;\r\n        disc = 5;\r\n    }\r\n\r\n    function collect_2_Y() external {\r\n        require( st == State.Delay );\r\n        require(clock < timeUnit*2);\r\n        st = State.Done_2;\r\n        disc = 5;\r\n    }\r\n\r\n    function collect_2_N() external {\r\n        require( st == State.Delay );\r\n        require(clock >= timeUnit*2);\r\n        st = State.Forfeit;\r\n        disc = 0;\r\n    }\r\n\r\n    function tick() external {\r\n        require(msg.sender == timeAdd);\r\n        clock ++;\r\n    }\r\n}\r\n\r\ncontract Supplier {\r\n    \r\n    Paylock public p;\r\n    Rental public r;\r\n\r\n    enum State { Working , Completed }\r\n    \r\n    State st;\r\n    bool hasResouce = false;\r\n    \r\n    constructor(address pp,address payable rr) public {\r\n        p = Paylock(pp);\r\n        r = Rental(rr);\r\n        st = State.Working;\r\n    }\r\n\r\n    function getRental() public view returns (address rentalAddr){\r\n        return address(r);\r\n    }\r\n    \r\n    function finish() external {\r\n        require (st == State.Working);\r\n        p.signal();\r\n        st = State.Completed;\r\n    }\r\n    \r\n    function aquire_resource() external payable {\r\n        require(!hasResouce);\r\n        r.rent_out_resource.value(1 ether)();\r\n        hasResouce = true;\r\n    }\r\n\r\n    function return_resource() external {\r\n        require(hasResouce);\r\n        r.retrieve_resource();\r\n        hasResouce = false;\r\n    }\r\n\r\n     // receive function to handle incoming ether\r\n    receive() external payable { }\r\n    // fallback function - where the magic happens\r\n    fallback() external payable { }\r\n}\r\n\r\ncontract Rental {\r\n    address resource_owner;\r\n    bool resource_available;\r\n    uint deposit = 1 wei;\r\n    mapping(address=>uint) balanceOf;\r\n    constructor() public {\r\n        resource_available = true;\r\n    }\r\n    \r\n    function rent_out_resource() external payable {  \r\n        require(resource_available == true);\r\n        //CHECK FOR PAYMENT HERE\r\n        balanceOf[msg.sender] = msg.value;\r\n        resource_owner = msg.sender;\r\n        resource_available = false;\r\n    }\r\n\r\n    function retrieve_resource() external {\r\n        require(resource_available == false && msg.sender == resource_owner);\r\n        //RETURN DEPOSIT HERE\r\n        // address payable x = payable(address(msg.sender));\r\n        // require(x.balance > deposit);\r\n        // x.transfer(balanceOf[msg.sender]);\r\n        resource_available = true;\r\n    }\r\n    \r\n    // receive function to handle incoming ether\r\n    receive() external payable { }\r\n    // fallback function - where the magic happens\r\n    fallback() external payable { }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/paylock.sol": {
				"Paylock": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_timeAdd",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "collect_1_N",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collect_1_Y",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collect_2_N",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collect_2_Y",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tick",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/paylock.sol\":73:1358  contract Paylock {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/paylock.sol\":248:249  4 */\n  0x04\n    /* \"contracts/paylock.sol\":233:249  int timeUnit = 4 */\n  0x03\n  sstore\n    /* \"contracts/paylock.sol\":286:428  constructor(address _timeAdd) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/paylock.sol\":286:428  constructor(address _timeAdd) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"contracts/paylock.sol\":286:428  constructor(address _timeAdd) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/paylock.sol\":339:352  State.Working */\n  0x00\n    /* \"contracts/paylock.sol\":334:336  st */\n  0x01\n  0x00\n    /* \"contracts/paylock.sol\":334:352  st = State.Working */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x05\n  dup2\n  gt\n  iszero\n  tag_5\n  jumpi\n  invalid\ntag_5:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/paylock.sol\":370:371  0 */\n  0x00\n    /* \"contracts/paylock.sol\":363:367  disc */\n  dup1\n    /* \"contracts/paylock.sol\":363:371  disc = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/paylock.sol\":390:391  0 */\n  0x00\n    /* \"contracts/paylock.sol\":382:387  clock */\n  0x02\n    /* \"contracts/paylock.sol\":382:391  clock = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/paylock.sol\":412:420  _timeAdd */\n  dup1\n    /* \"contracts/paylock.sol\":402:409  timeAdd */\n  0x04\n  0x00\n    /* \"contracts/paylock.sol\":402:420  timeAdd = _timeAdd */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/paylock.sol\":286:428  constructor(address _timeAdd) public {\r... */\n  pop\n    /* \"contracts/paylock.sol\":73:1358  contract Paylock {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/paylock.sol\":73:1358  contract Paylock {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/paylock.sol\":73:1358  contract Paylock {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3eaf5d9f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4c3bc76e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x640d090b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x94f5c52d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x953884de\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xe3ed5166\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/paylock.sol\":1262:1355  function tick() external {\r... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/paylock.sol\":569:734  function collect_1_Y() public {\r... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/paylock.sol\":436:561  function signal() public {\r... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/paylock.sol\":1088:1254  function collect_2_N() external {\r... */\n    tag_6:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/paylock.sol\":742:908  function collect_1_N() external {\r... */\n    tag_7:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/paylock.sol\":916:1080  function collect_2_Y() external {\r... */\n    tag_8:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/paylock.sol\":1262:1355  function tick() external {\r... */\n    tag_10:\n        /* \"contracts/paylock.sol\":1320:1327  timeAdd */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/paylock.sol\":1306:1327  msg.sender == timeAdd */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/paylock.sol\":1306:1316  msg.sender */\n      caller\n        /* \"contracts/paylock.sol\":1306:1327  msg.sender == timeAdd */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/paylock.sol\":1298:1328  require(msg.sender == timeAdd) */\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n        /* \"contracts/paylock.sol\":1339:1344  clock */\n      0x02\n      0x00\n        /* \"contracts/paylock.sol\":1339:1347  clock ++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":1262:1355  function tick() external {\r... */\n      jump\t// out\n        /* \"contracts/paylock.sol\":569:734  function collect_1_Y() public {\r... */\n    tag_12:\n        /* \"contracts/paylock.sol\":625:640  State.Completed */\n      0x01\n        /* \"contracts/paylock.sol\":619:640  st == State.Completed */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_24\n      jumpi\n      invalid\n    tag_24:\n        /* \"contracts/paylock.sol\":619:621  st */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/paylock.sol\":619:640  st == State.Completed */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_25\n      jumpi\n      invalid\n    tag_25:\n      eq\n        /* \"contracts/paylock.sol\":610:642  require( st == State.Completed ) */\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n        /* \"contracts/paylock.sol\":669:677  timeUnit */\n      sload(0x03)\n        /* \"contracts/paylock.sol\":661:666  clock */\n      sload(0x02)\n        /* \"contracts/paylock.sol\":661:677  clock < timeUnit */\n      slt\n        /* \"contracts/paylock.sol\":653:678  require(clock < timeUnit) */\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n        /* \"contracts/paylock.sol\":694:706  State.Done_1 */\n      0x02\n        /* \"contracts/paylock.sol\":689:691  st */\n      0x01\n      0x00\n        /* \"contracts/paylock.sol\":689:706  st = State.Done_1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x05\n      dup2\n      gt\n      iszero\n      tag_28\n      jumpi\n      invalid\n    tag_28:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":724:726  10 */\n      0x0a\n        /* \"contracts/paylock.sol\":717:721  disc */\n      0x00\n        /* \"contracts/paylock.sol\":717:726  disc = 10 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":569:734  function collect_1_Y() public {\r... */\n      jump\t// out\n        /* \"contracts/paylock.sol\":436:561  function signal() public {\r... */\n    tag_14:\n        /* \"contracts/paylock.sol\":487:500  State.Working */\n      0x00\n        /* \"contracts/paylock.sol\":481:500  st == State.Working */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      invalid\n    tag_30:\n        /* \"contracts/paylock.sol\":481:483  st */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/paylock.sol\":481:500  st == State.Working */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_31\n      jumpi\n      invalid\n    tag_31:\n      eq\n        /* \"contracts/paylock.sol\":472:502  require( st == State.Working ) */\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n        /* \"contracts/paylock.sol\":518:533  State.Completed */\n      0x01\n        /* \"contracts/paylock.sol\":513:515  st */\n      dup1\n      0x00\n        /* \"contracts/paylock.sol\":513:533  st = State.Completed */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x05\n      dup2\n      gt\n      iszero\n      tag_33\n      jumpi\n      invalid\n    tag_33:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":551:553  10 */\n      0x0a\n        /* \"contracts/paylock.sol\":544:548  disc */\n      0x00\n        /* \"contracts/paylock.sol\":544:553  disc = 10 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":436:561  function signal() public {\r... */\n      jump\t// out\n        /* \"contracts/paylock.sol\":1088:1254  function collect_2_N() external {\r... */\n    tag_16:\n        /* \"contracts/paylock.sol\":1146:1157  State.Delay */\n      0x03\n        /* \"contracts/paylock.sol\":1140:1157  st == State.Delay */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_35\n      jumpi\n      invalid\n    tag_35:\n        /* \"contracts/paylock.sol\":1140:1142  st */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/paylock.sol\":1140:1157  st == State.Delay */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_36\n      jumpi\n      invalid\n    tag_36:\n      eq\n        /* \"contracts/paylock.sol\":1131:1159  require( st == State.Delay ) */\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n        /* \"contracts/paylock.sol\":1196:1197  2 */\n      0x02\n        /* \"contracts/paylock.sol\":1187:1195  timeUnit */\n      sload(0x03)\n        /* \"contracts/paylock.sol\":1187:1197  timeUnit*2 */\n      mul\n        /* \"contracts/paylock.sol\":1178:1183  clock */\n      sload(0x02)\n        /* \"contracts/paylock.sol\":1178:1197  clock >= timeUnit*2 */\n      slt\n      iszero\n        /* \"contracts/paylock.sol\":1170:1198  require(clock >= timeUnit*2) */\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n        /* \"contracts/paylock.sol\":1214:1227  State.Forfeit */\n      0x05\n        /* \"contracts/paylock.sol\":1209:1211  st */\n      0x01\n      0x00\n        /* \"contracts/paylock.sol\":1209:1227  st = State.Forfeit */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x05\n      dup2\n      gt\n      iszero\n      tag_39\n      jumpi\n      invalid\n    tag_39:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":1245:1246  0 */\n      0x00\n        /* \"contracts/paylock.sol\":1238:1242  disc */\n      dup1\n        /* \"contracts/paylock.sol\":1238:1246  disc = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":1088:1254  function collect_2_N() external {\r... */\n      jump\t// out\n        /* \"contracts/paylock.sol\":742:908  function collect_1_N() external {\r... */\n    tag_18:\n        /* \"contracts/paylock.sol\":800:815  State.Completed */\n      0x01\n        /* \"contracts/paylock.sol\":794:815  st == State.Completed */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_41\n      jumpi\n      invalid\n    tag_41:\n        /* \"contracts/paylock.sol\":794:796  st */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/paylock.sol\":794:815  st == State.Completed */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_42\n      jumpi\n      invalid\n    tag_42:\n      eq\n        /* \"contracts/paylock.sol\":785:817  require( st == State.Completed ) */\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n        /* \"contracts/paylock.sol\":845:853  timeUnit */\n      sload(0x03)\n        /* \"contracts/paylock.sol\":836:841  clock */\n      sload(0x02)\n        /* \"contracts/paylock.sol\":836:853  clock >= timeUnit */\n      slt\n      iszero\n        /* \"contracts/paylock.sol\":828:854  require(clock >= timeUnit) */\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n        /* \"contracts/paylock.sol\":870:881  State.Delay */\n      0x03\n        /* \"contracts/paylock.sol\":865:867  st */\n      0x01\n      0x00\n        /* \"contracts/paylock.sol\":865:881  st = State.Delay */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x05\n      dup2\n      gt\n      iszero\n      tag_45\n      jumpi\n      invalid\n    tag_45:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":899:900  5 */\n      0x05\n        /* \"contracts/paylock.sol\":892:896  disc */\n      0x00\n        /* \"contracts/paylock.sol\":892:900  disc = 5 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":742:908  function collect_1_N() external {\r... */\n      jump\t// out\n        /* \"contracts/paylock.sol\":916:1080  function collect_2_Y() external {\r... */\n    tag_20:\n        /* \"contracts/paylock.sol\":974:985  State.Delay */\n      0x03\n        /* \"contracts/paylock.sol\":968:985  st == State.Delay */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_47\n      jumpi\n      invalid\n    tag_47:\n        /* \"contracts/paylock.sol\":968:970  st */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/paylock.sol\":968:985  st == State.Delay */\n      0x05\n      dup2\n      gt\n      iszero\n      tag_48\n      jumpi\n      invalid\n    tag_48:\n      eq\n        /* \"contracts/paylock.sol\":959:987  require( st == State.Delay ) */\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n        /* \"contracts/paylock.sol\":1023:1024  2 */\n      0x02\n        /* \"contracts/paylock.sol\":1014:1022  timeUnit */\n      sload(0x03)\n        /* \"contracts/paylock.sol\":1014:1024  timeUnit*2 */\n      mul\n        /* \"contracts/paylock.sol\":1006:1011  clock */\n      sload(0x02)\n        /* \"contracts/paylock.sol\":1006:1024  clock < timeUnit*2 */\n      slt\n        /* \"contracts/paylock.sol\":998:1025  require(clock < timeUnit*2) */\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n        /* \"contracts/paylock.sol\":1041:1053  State.Done_2 */\n      0x04\n        /* \"contracts/paylock.sol\":1036:1038  st */\n      0x01\n      0x00\n        /* \"contracts/paylock.sol\":1036:1053  st = State.Done_2 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x05\n      dup2\n      gt\n      iszero\n      tag_51\n      jumpi\n      invalid\n    tag_51:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":1071:1072  5 */\n      0x05\n        /* \"contracts/paylock.sol\":1064:1068  disc */\n      0x00\n        /* \"contracts/paylock.sol\":1064:1072  disc = 5 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":916:1080  function collect_2_Y() external {\r... */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220acf74396cfcb9428130ddfa3d1d31fbb1f8079cf3e0ed105a491be03759b36b964736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052600460035534801561001557600080fd5b5060405161043a38038061043a8339818101604052602081101561003857600080fd5b81019080805190602001909291905050506000600160006101000a81548160ff0219169083600581111561006857fe5b021790555060008081905550600060028190555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061036d806100cd6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633eaf5d9f146100675780634c3bc76e14610071578063640d090b1461007b57806394f5c52d14610085578063953884de1461008f578063e3ed516614610099575b600080fd5b61006f6100a3565b005b610079610111565b005b610083610181565b005b61008d6101e0565b005b610097610253565b005b6100a16102c4565b005b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100fd57600080fd5b600260008154809291906001019190505550565b6001600581111561011e57fe5b600160009054906101000a900460ff16600581111561013957fe5b1461014357600080fd5b6003546002541261015357600080fd5b6002600160006101000a81548160ff0219169083600581111561017257fe5b0217905550600a600081905550565b6000600581111561018e57fe5b600160009054906101000a900460ff1660058111156101a957fe5b146101b357600080fd5b60018060006101000a81548160ff021916908360058111156101d157fe5b0217905550600a600081905550565b600360058111156101ed57fe5b600160009054906101000a900460ff16600581111561020857fe5b1461021257600080fd5b600260035402600254121561022657600080fd5b6005600160006101000a81548160ff0219169083600581111561024557fe5b021790555060008081905550565b6001600581111561026057fe5b600160009054906101000a900460ff16600581111561027b57fe5b1461028557600080fd5b600354600254121561029657600080fd5b6003600160006101000a81548160ff021916908360058111156102b557fe5b02179055506005600081905550565b600360058111156102d157fe5b600160009054906101000a900460ff1660058111156102ec57fe5b146102f657600080fd5b6002600354026002541261030957600080fd5b6004600160006101000a81548160ff0219169083600581111561032857fe5b0217905550600560008190555056fea2646970667358221220acf74396cfcb9428130ddfa3d1d31fbb1f8079cf3e0ed105a491be03759b36b964736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x43A CODESIZE SUB DUP1 PUSH2 0x43A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x68 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x36D DUP1 PUSH2 0xCD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3EAF5D9F EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x4C3BC76E EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x640D090B EQ PUSH2 0x7B JUMPI DUP1 PUSH4 0x94F5C52D EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x953884DE EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0xE3ED5166 EQ PUSH2 0x99 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0xA3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH2 0x111 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x83 PUSH2 0x181 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8D PUSH2 0x1E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x97 PUSH2 0x253 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA1 PUSH2 0x2C4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x11E JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x139 JUMPI INVALID JUMPDEST EQ PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD SLT PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x172 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x18E JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1A9 JUMPI INVALID JUMPDEST EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1D1 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1ED JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x208 JUMPI INVALID JUMPDEST EQ PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 SLOAD MUL PUSH1 0x2 SLOAD SLT ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x245 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x260 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x27B JUMPI INVALID JUMPDEST EQ PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD SLT ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2B5 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2D1 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2EC JUMPI INVALID JUMPDEST EQ PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 SLOAD MUL PUSH1 0x2 SLOAD SLT PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x328 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xF7 NUMBER SWAP7 0xCF 0xCB SWAP5 0x28 SGT 0xD 0xDF LOG3 0xD1 0xD3 0x1F 0xBB 0x1F DUP1 PUSH26 0xCF3E0ED105A491BE03759B36B964736F6C634300060000330000 ",
							"sourceMap": "73:1285:0:-:0;;;248:1;233:16;;286:142;8:9:-1;5:2;;;30:1;27;20:12;5:2;286:142:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;286:142:0;;;;;;;;;;;;;;;;339:13;334:2;;:18;;;;;;;;;;;;;;;;;;;;;;;;370:1;363:4;:8;;;;390:1;382:5;:9;;;;412:8;402:7;;:18;;;;;;;;;;;;;;;;;;286:142;73:1285;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80633eaf5d9f146100675780634c3bc76e14610071578063640d090b1461007b57806394f5c52d14610085578063953884de1461008f578063e3ed516614610099575b600080fd5b61006f6100a3565b005b610079610111565b005b610083610181565b005b61008d6101e0565b005b610097610253565b005b6100a16102c4565b005b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100fd57600080fd5b600260008154809291906001019190505550565b6001600581111561011e57fe5b600160009054906101000a900460ff16600581111561013957fe5b1461014357600080fd5b6003546002541261015357600080fd5b6002600160006101000a81548160ff0219169083600581111561017257fe5b0217905550600a600081905550565b6000600581111561018e57fe5b600160009054906101000a900460ff1660058111156101a957fe5b146101b357600080fd5b60018060006101000a81548160ff021916908360058111156101d157fe5b0217905550600a600081905550565b600360058111156101ed57fe5b600160009054906101000a900460ff16600581111561020857fe5b1461021257600080fd5b600260035402600254121561022657600080fd5b6005600160006101000a81548160ff0219169083600581111561024557fe5b021790555060008081905550565b6001600581111561026057fe5b600160009054906101000a900460ff16600581111561027b57fe5b1461028557600080fd5b600354600254121561029657600080fd5b6003600160006101000a81548160ff021916908360058111156102b557fe5b02179055506005600081905550565b600360058111156102d157fe5b600160009054906101000a900460ff1660058111156102ec57fe5b146102f657600080fd5b6002600354026002541261030957600080fd5b6004600160006101000a81548160ff0219169083600581111561032857fe5b0217905550600560008190555056fea2646970667358221220acf74396cfcb9428130ddfa3d1d31fbb1f8079cf3e0ed105a491be03759b36b964736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3EAF5D9F EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x4C3BC76E EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x640D090B EQ PUSH2 0x7B JUMPI DUP1 PUSH4 0x94F5C52D EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x953884DE EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0xE3ED5166 EQ PUSH2 0x99 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0xA3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH2 0x111 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x83 PUSH2 0x181 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8D PUSH2 0x1E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x97 PUSH2 0x253 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA1 PUSH2 0x2C4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x11E JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x139 JUMPI INVALID JUMPDEST EQ PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD SLT PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x172 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x18E JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1A9 JUMPI INVALID JUMPDEST EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1D1 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1ED JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x208 JUMPI INVALID JUMPDEST EQ PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 SLOAD MUL PUSH1 0x2 SLOAD SLT ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x245 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x260 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x27B JUMPI INVALID JUMPDEST EQ PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD SLT ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2B5 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2D1 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x2EC JUMPI INVALID JUMPDEST EQ PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 SLOAD MUL PUSH1 0x2 SLOAD SLT PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x328 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xF7 NUMBER SWAP7 0xCF 0xCB SWAP5 0x28 SGT 0xD 0xDF LOG3 0xD1 0xD3 0x1F 0xBB 0x1F DUP1 PUSH26 0xCF3E0ED105A491BE03759B36B964736F6C634300060000330000 ",
							"sourceMap": "73:1285:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;73:1285:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1262:93;;;:::i;:::-;;569:165;;;:::i;:::-;;436:125;;;:::i;:::-;;1088:166;;;:::i;:::-;;742;;;:::i;:::-;;916:164;;;:::i;:::-;;1262:93;1320:7;;;;;;;;;;;1306:21;;:10;:21;;;1298:30;;;;;;1339:5;;:8;;;;;;;;;;;;;1262:93::o;569:165::-;625:15;619:21;;;;;;;;:2;;;;;;;;;;;:21;;;;;;;;;610:32;;;;;;669:8;;661:5;;:16;653:25;;;;;;694:12;689:2;;:17;;;;;;;;;;;;;;;;;;;;;;;;724:2;717:4;:9;;;;569:165::o;436:125::-;487:13;481:19;;;;;;;;:2;;;;;;;;;;;:19;;;;;;;;;472:30;;;;;;518:15;513:2;;:20;;;;;;;;;;;;;;;;;;;;;;;;551:2;544:4;:9;;;;436:125::o;1088:166::-;1146:11;1140:17;;;;;;;;:2;;;;;;;;;;;:17;;;;;;;;;1131:28;;;;;;1196:1;1187:8;;:10;1178:5;;:19;;1170:28;;;;;;1214:13;1209:2;;:18;;;;;;;;;;;;;;;;;;;;;;;;1245:1;1238:4;:8;;;;1088:166::o;742:::-;800:15;794:21;;;;;;;;:2;;;;;;;;;;;:21;;;;;;;;;785:32;;;;;;845:8;;836:5;;:17;;828:26;;;;;;870:11;865:2;;:16;;;;;;;;;;;;;;;;;;;;;;;;899:1;892:4;:8;;;;742:166::o;916:164::-;974:11;968:17;;;;;;;;:2;;;;;;;;;;;:17;;;;;;;;;959:28;;;;;;1023:1;1014:8;;:10;1006:5;;:18;998:27;;;;;;1041:12;1036:2;;:17;;;;;;;;;;;;;;;;;;;;;;;;1071:1;1064:4;:8;;;;916:164::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "175400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"collect_1_N()": "43648",
								"collect_1_Y()": "43579",
								"collect_2_N()": "28634",
								"collect_2_Y()": "43675",
								"signal()": "41978",
								"tick()": "21829"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 73,
									"end": 1358,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 73,
									"end": 1358,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 73,
									"end": 1358,
									"name": "MSTORE"
								},
								{
									"begin": 248,
									"end": 249,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 233,
									"end": 249,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 233,
									"end": 249,
									"name": "SSTORE"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "POP"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "MLOAD"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "PUSHSIZE"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "CODESIZE"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "SUB"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "DUP1"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "PUSHSIZE"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "DUP4"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "CODECOPY"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "DUP2"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "DUP2"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "ADD"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "DUP2"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "ADD"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "SWAP1"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "DUP1"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "DUP1"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "MLOAD"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "SWAP1"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "ADD"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "SWAP1"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "SWAP3"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "SWAP2"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "SWAP1"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "POP"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "POP"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "POP"
								},
								{
									"begin": 339,
									"end": 352,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 334,
									"end": 336,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 334,
									"end": 336,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "EXP"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "DUP2"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "SLOAD"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "DUP2"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "MUL"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "NOT"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "AND"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "SWAP1"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "DUP4"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "DUP2"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "GT"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "ISZERO"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "JUMPI"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "INVALID"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "JUMPDEST"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "MUL"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "OR"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "SWAP1"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "SSTORE"
								},
								{
									"begin": 334,
									"end": 352,
									"name": "POP"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 363,
									"end": 367,
									"name": "DUP1"
								},
								{
									"begin": 363,
									"end": 371,
									"name": "DUP2"
								},
								{
									"begin": 363,
									"end": 371,
									"name": "SWAP1"
								},
								{
									"begin": 363,
									"end": 371,
									"name": "SSTORE"
								},
								{
									"begin": 363,
									"end": 371,
									"name": "POP"
								},
								{
									"begin": 390,
									"end": 391,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 382,
									"end": 387,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 382,
									"end": 391,
									"name": "DUP2"
								},
								{
									"begin": 382,
									"end": 391,
									"name": "SWAP1"
								},
								{
									"begin": 382,
									"end": 391,
									"name": "SSTORE"
								},
								{
									"begin": 382,
									"end": 391,
									"name": "POP"
								},
								{
									"begin": 412,
									"end": 420,
									"name": "DUP1"
								},
								{
									"begin": 402,
									"end": 409,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 402,
									"end": 409,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 402,
									"end": 420,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 402,
									"end": 420,
									"name": "EXP"
								},
								{
									"begin": 402,
									"end": 420,
									"name": "DUP2"
								},
								{
									"begin": 402,
									"end": 420,
									"name": "SLOAD"
								},
								{
									"begin": 402,
									"end": 420,
									"name": "DUP2"
								},
								{
									"begin": 402,
									"end": 420,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 402,
									"end": 420,
									"name": "MUL"
								},
								{
									"begin": 402,
									"end": 420,
									"name": "NOT"
								},
								{
									"begin": 402,
									"end": 420,
									"name": "AND"
								},
								{
									"begin": 402,
									"end": 420,
									"name": "SWAP1"
								},
								{
									"begin": 402,
									"end": 420,
									"name": "DUP4"
								},
								{
									"begin": 402,
									"end": 420,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 402,
									"end": 420,
									"name": "AND"
								},
								{
									"begin": 402,
									"end": 420,
									"name": "MUL"
								},
								{
									"begin": 402,
									"end": 420,
									"name": "OR"
								},
								{
									"begin": 402,
									"end": 420,
									"name": "SWAP1"
								},
								{
									"begin": 402,
									"end": 420,
									"name": "SSTORE"
								},
								{
									"begin": 402,
									"end": 420,
									"name": "POP"
								},
								{
									"begin": 286,
									"end": 428,
									"name": "POP"
								},
								{
									"begin": 73,
									"end": 1358,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 73,
									"end": 1358,
									"name": "DUP1"
								},
								{
									"begin": 73,
									"end": 1358,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 73,
									"end": 1358,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 73,
									"end": 1358,
									"name": "CODECOPY"
								},
								{
									"begin": 73,
									"end": 1358,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 73,
									"end": 1358,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220acf74396cfcb9428130ddfa3d1d31fbb1f8079cf3e0ed105a491be03759b36b964736f6c63430006000033",
									".code": [
										{
											"begin": 73,
											"end": 1358,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "MSTORE"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "POP"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "LT"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "JUMPI"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "SHR"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "PUSH",
											"value": "3EAF5D9F"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "EQ"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "JUMPI"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "PUSH",
											"value": "4C3BC76E"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "EQ"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "JUMPI"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "PUSH",
											"value": "640D090B"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "EQ"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "JUMPI"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "PUSH",
											"value": "94F5C52D"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "EQ"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "JUMPI"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "PUSH",
											"value": "953884DE"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "EQ"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "JUMPI"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "PUSH",
											"value": "E3ED5166"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "EQ"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "JUMPI"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 1358,
											"name": "REVERT"
										},
										{
											"begin": 1262,
											"end": 1355,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1262,
											"end": 1355,
											"name": "JUMPDEST"
										},
										{
											"begin": 1262,
											"end": 1355,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1262,
											"end": 1355,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1262,
											"end": 1355,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1262,
											"end": 1355,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1262,
											"end": 1355,
											"name": "JUMPDEST"
										},
										{
											"begin": 1262,
											"end": 1355,
											"name": "STOP"
										},
										{
											"begin": 569,
											"end": 734,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 569,
											"end": 734,
											"name": "JUMPDEST"
										},
										{
											"begin": 569,
											"end": 734,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 569,
											"end": 734,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 569,
											"end": 734,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 569,
											"end": 734,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 569,
											"end": 734,
											"name": "JUMPDEST"
										},
										{
											"begin": 569,
											"end": 734,
											"name": "STOP"
										},
										{
											"begin": 436,
											"end": 561,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 436,
											"end": 561,
											"name": "JUMPDEST"
										},
										{
											"begin": 436,
											"end": 561,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 436,
											"end": 561,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 436,
											"end": 561,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 436,
											"end": 561,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 436,
											"end": 561,
											"name": "JUMPDEST"
										},
										{
											"begin": 436,
											"end": 561,
											"name": "STOP"
										},
										{
											"begin": 1088,
											"end": 1254,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1088,
											"end": 1254,
											"name": "JUMPDEST"
										},
										{
											"begin": 1088,
											"end": 1254,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1088,
											"end": 1254,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1088,
											"end": 1254,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1088,
											"end": 1254,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1088,
											"end": 1254,
											"name": "JUMPDEST"
										},
										{
											"begin": 1088,
											"end": 1254,
											"name": "STOP"
										},
										{
											"begin": 742,
											"end": 908,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 742,
											"end": 908,
											"name": "JUMPDEST"
										},
										{
											"begin": 742,
											"end": 908,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 742,
											"end": 908,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 742,
											"end": 908,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 742,
											"end": 908,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 742,
											"end": 908,
											"name": "JUMPDEST"
										},
										{
											"begin": 742,
											"end": 908,
											"name": "STOP"
										},
										{
											"begin": 916,
											"end": 1080,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 916,
											"end": 1080,
											"name": "JUMPDEST"
										},
										{
											"begin": 916,
											"end": 1080,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 916,
											"end": 1080,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 916,
											"end": 1080,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 916,
											"end": 1080,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 916,
											"end": 1080,
											"name": "JUMPDEST"
										},
										{
											"begin": 916,
											"end": 1080,
											"name": "STOP"
										},
										{
											"begin": 1262,
											"end": 1355,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1262,
											"end": 1355,
											"name": "JUMPDEST"
										},
										{
											"begin": 1320,
											"end": 1327,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1320,
											"end": 1327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1320,
											"end": 1327,
											"name": "SWAP1"
										},
										{
											"begin": 1320,
											"end": 1327,
											"name": "SLOAD"
										},
										{
											"begin": 1320,
											"end": 1327,
											"name": "SWAP1"
										},
										{
											"begin": 1320,
											"end": 1327,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1320,
											"end": 1327,
											"name": "EXP"
										},
										{
											"begin": 1320,
											"end": 1327,
											"name": "SWAP1"
										},
										{
											"begin": 1320,
											"end": 1327,
											"name": "DIV"
										},
										{
											"begin": 1320,
											"end": 1327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1320,
											"end": 1327,
											"name": "AND"
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "AND"
										},
										{
											"begin": 1306,
											"end": 1316,
											"name": "CALLER"
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "AND"
										},
										{
											"begin": 1306,
											"end": 1327,
											"name": "EQ"
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "JUMPI"
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "DUP1"
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "REVERT"
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "JUMPDEST"
										},
										{
											"begin": 1339,
											"end": 1344,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1339,
											"end": 1344,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1347,
											"name": "DUP2"
										},
										{
											"begin": 1339,
											"end": 1347,
											"name": "SLOAD"
										},
										{
											"begin": 1339,
											"end": 1347,
											"name": "DUP1"
										},
										{
											"begin": 1339,
											"end": 1347,
											"name": "SWAP3"
										},
										{
											"begin": 1339,
											"end": 1347,
											"name": "SWAP2"
										},
										{
											"begin": 1339,
											"end": 1347,
											"name": "SWAP1"
										},
										{
											"begin": 1339,
											"end": 1347,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1339,
											"end": 1347,
											"name": "ADD"
										},
										{
											"begin": 1339,
											"end": 1347,
											"name": "SWAP2"
										},
										{
											"begin": 1339,
											"end": 1347,
											"name": "SWAP1"
										},
										{
											"begin": 1339,
											"end": 1347,
											"name": "POP"
										},
										{
											"begin": 1339,
											"end": 1347,
											"name": "SSTORE"
										},
										{
											"begin": 1339,
											"end": 1347,
											"name": "POP"
										},
										{
											"begin": 1262,
											"end": 1355,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 569,
											"end": 734,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 569,
											"end": 734,
											"name": "JUMPDEST"
										},
										{
											"begin": 625,
											"end": 640,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "DUP2"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "GT"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "ISZERO"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "JUMPI"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "INVALID"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "JUMPDEST"
										},
										{
											"begin": 619,
											"end": 621,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 619,
											"end": 621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 619,
											"end": 621,
											"name": "SWAP1"
										},
										{
											"begin": 619,
											"end": 621,
											"name": "SLOAD"
										},
										{
											"begin": 619,
											"end": 621,
											"name": "SWAP1"
										},
										{
											"begin": 619,
											"end": 621,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 619,
											"end": 621,
											"name": "EXP"
										},
										{
											"begin": 619,
											"end": 621,
											"name": "SWAP1"
										},
										{
											"begin": 619,
											"end": 621,
											"name": "DIV"
										},
										{
											"begin": 619,
											"end": 621,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 619,
											"end": 621,
											"name": "AND"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "DUP2"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "GT"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "ISZERO"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "JUMPI"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "INVALID"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "JUMPDEST"
										},
										{
											"begin": 619,
											"end": 640,
											"name": "EQ"
										},
										{
											"begin": 610,
											"end": 642,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 610,
											"end": 642,
											"name": "JUMPI"
										},
										{
											"begin": 610,
											"end": 642,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 610,
											"end": 642,
											"name": "DUP1"
										},
										{
											"begin": 610,
											"end": 642,
											"name": "REVERT"
										},
										{
											"begin": 610,
											"end": 642,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 610,
											"end": 642,
											"name": "JUMPDEST"
										},
										{
											"begin": 669,
											"end": 677,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 669,
											"end": 677,
											"name": "SLOAD"
										},
										{
											"begin": 661,
											"end": 666,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 661,
											"end": 666,
											"name": "SLOAD"
										},
										{
											"begin": 661,
											"end": 677,
											"name": "SLT"
										},
										{
											"begin": 653,
											"end": 678,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 653,
											"end": 678,
											"name": "JUMPI"
										},
										{
											"begin": 653,
											"end": 678,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 653,
											"end": 678,
											"name": "DUP1"
										},
										{
											"begin": 653,
											"end": 678,
											"name": "REVERT"
										},
										{
											"begin": 653,
											"end": 678,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 653,
											"end": 678,
											"name": "JUMPDEST"
										},
										{
											"begin": 694,
											"end": 706,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 689,
											"end": 691,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 689,
											"end": 691,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "EXP"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "DUP2"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "SLOAD"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "DUP2"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "MUL"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "NOT"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "AND"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "SWAP1"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "DUP4"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "DUP2"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "GT"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "ISZERO"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "JUMPI"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "INVALID"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "JUMPDEST"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "MUL"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "OR"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "SWAP1"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "SSTORE"
										},
										{
											"begin": 689,
											"end": 706,
											"name": "POP"
										},
										{
											"begin": 724,
											"end": 726,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 717,
											"end": 721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 717,
											"end": 726,
											"name": "DUP2"
										},
										{
											"begin": 717,
											"end": 726,
											"name": "SWAP1"
										},
										{
											"begin": 717,
											"end": 726,
											"name": "SSTORE"
										},
										{
											"begin": 717,
											"end": 726,
											"name": "POP"
										},
										{
											"begin": 569,
											"end": 734,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 436,
											"end": 561,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 436,
											"end": 561,
											"name": "JUMPDEST"
										},
										{
											"begin": 487,
											"end": 500,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 481,
											"end": 500,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 481,
											"end": 500,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 500,
											"name": "GT"
										},
										{
											"begin": 481,
											"end": 500,
											"name": "ISZERO"
										},
										{
											"begin": 481,
											"end": 500,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 481,
											"end": 500,
											"name": "JUMPI"
										},
										{
											"begin": 481,
											"end": 500,
											"name": "INVALID"
										},
										{
											"begin": 481,
											"end": 500,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 481,
											"end": 500,
											"name": "JUMPDEST"
										},
										{
											"begin": 481,
											"end": 483,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 481,
											"end": 483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 481,
											"end": 483,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 483,
											"name": "SLOAD"
										},
										{
											"begin": 481,
											"end": 483,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 483,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 481,
											"end": 483,
											"name": "EXP"
										},
										{
											"begin": 481,
											"end": 483,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 483,
											"name": "DIV"
										},
										{
											"begin": 481,
											"end": 483,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 481,
											"end": 483,
											"name": "AND"
										},
										{
											"begin": 481,
											"end": 500,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 481,
											"end": 500,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 500,
											"name": "GT"
										},
										{
											"begin": 481,
											"end": 500,
											"name": "ISZERO"
										},
										{
											"begin": 481,
											"end": 500,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 481,
											"end": 500,
											"name": "JUMPI"
										},
										{
											"begin": 481,
											"end": 500,
											"name": "INVALID"
										},
										{
											"begin": 481,
											"end": 500,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 481,
											"end": 500,
											"name": "JUMPDEST"
										},
										{
											"begin": 481,
											"end": 500,
											"name": "EQ"
										},
										{
											"begin": 472,
											"end": 502,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 472,
											"end": 502,
											"name": "JUMPI"
										},
										{
											"begin": 472,
											"end": 502,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 472,
											"end": 502,
											"name": "DUP1"
										},
										{
											"begin": 472,
											"end": 502,
											"name": "REVERT"
										},
										{
											"begin": 472,
											"end": 502,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 472,
											"end": 502,
											"name": "JUMPDEST"
										},
										{
											"begin": 518,
											"end": 533,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 513,
											"end": 515,
											"name": "DUP1"
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "EXP"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "DUP2"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "SLOAD"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "DUP2"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "MUL"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "NOT"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "AND"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "SWAP1"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "DUP4"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "DUP2"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "GT"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "ISZERO"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "JUMPI"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "INVALID"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "JUMPDEST"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "MUL"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "OR"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "SWAP1"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "SSTORE"
										},
										{
											"begin": 513,
											"end": 533,
											"name": "POP"
										},
										{
											"begin": 551,
											"end": 553,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 544,
											"end": 548,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 544,
											"end": 553,
											"name": "DUP2"
										},
										{
											"begin": 544,
											"end": 553,
											"name": "SWAP1"
										},
										{
											"begin": 544,
											"end": 553,
											"name": "SSTORE"
										},
										{
											"begin": 544,
											"end": 553,
											"name": "POP"
										},
										{
											"begin": 436,
											"end": 561,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1088,
											"end": 1254,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1088,
											"end": 1254,
											"name": "JUMPDEST"
										},
										{
											"begin": 1146,
											"end": 1157,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "DUP2"
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "GT"
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "ISZERO"
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "JUMPI"
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "INVALID"
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "JUMPDEST"
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "SWAP1"
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "SLOAD"
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "SWAP1"
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "EXP"
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "SWAP1"
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "DIV"
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "AND"
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "DUP2"
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "GT"
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "ISZERO"
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "JUMPI"
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "INVALID"
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "JUMPDEST"
										},
										{
											"begin": 1140,
											"end": 1157,
											"name": "EQ"
										},
										{
											"begin": 1131,
											"end": 1159,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1131,
											"end": 1159,
											"name": "JUMPI"
										},
										{
											"begin": 1131,
											"end": 1159,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1159,
											"name": "DUP1"
										},
										{
											"begin": 1131,
											"end": 1159,
											"name": "REVERT"
										},
										{
											"begin": 1131,
											"end": 1159,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1131,
											"end": 1159,
											"name": "JUMPDEST"
										},
										{
											"begin": 1196,
											"end": 1197,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1187,
											"end": 1195,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1187,
											"end": 1195,
											"name": "SLOAD"
										},
										{
											"begin": 1187,
											"end": 1197,
											"name": "MUL"
										},
										{
											"begin": 1178,
											"end": 1183,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1178,
											"end": 1183,
											"name": "SLOAD"
										},
										{
											"begin": 1178,
											"end": 1197,
											"name": "SLT"
										},
										{
											"begin": 1178,
											"end": 1197,
											"name": "ISZERO"
										},
										{
											"begin": 1170,
											"end": 1198,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1170,
											"end": 1198,
											"name": "JUMPI"
										},
										{
											"begin": 1170,
											"end": 1198,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1198,
											"name": "DUP1"
										},
										{
											"begin": 1170,
											"end": 1198,
											"name": "REVERT"
										},
										{
											"begin": 1170,
											"end": 1198,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1170,
											"end": 1198,
											"name": "JUMPDEST"
										},
										{
											"begin": 1214,
											"end": 1227,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1209,
											"end": 1211,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1209,
											"end": 1211,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "EXP"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "DUP2"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "SLOAD"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "DUP2"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "MUL"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "NOT"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "AND"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "SWAP1"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "DUP4"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "DUP2"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "GT"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "ISZERO"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "JUMPI"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "INVALID"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "JUMPDEST"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "MUL"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "OR"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "SWAP1"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "SSTORE"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 1245,
											"end": 1246,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1242,
											"name": "DUP1"
										},
										{
											"begin": 1238,
											"end": 1246,
											"name": "DUP2"
										},
										{
											"begin": 1238,
											"end": 1246,
											"name": "SWAP1"
										},
										{
											"begin": 1238,
											"end": 1246,
											"name": "SSTORE"
										},
										{
											"begin": 1238,
											"end": 1246,
											"name": "POP"
										},
										{
											"begin": 1088,
											"end": 1254,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 742,
											"end": 908,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 742,
											"end": 908,
											"name": "JUMPDEST"
										},
										{
											"begin": 800,
											"end": 815,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 794,
											"end": 815,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 794,
											"end": 815,
											"name": "DUP2"
										},
										{
											"begin": 794,
											"end": 815,
											"name": "GT"
										},
										{
											"begin": 794,
											"end": 815,
											"name": "ISZERO"
										},
										{
											"begin": 794,
											"end": 815,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 794,
											"end": 815,
											"name": "JUMPI"
										},
										{
											"begin": 794,
											"end": 815,
											"name": "INVALID"
										},
										{
											"begin": 794,
											"end": 815,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 794,
											"end": 815,
											"name": "JUMPDEST"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "SWAP1"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "SLOAD"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "SWAP1"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "EXP"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "SWAP1"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "DIV"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "AND"
										},
										{
											"begin": 794,
											"end": 815,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 794,
											"end": 815,
											"name": "DUP2"
										},
										{
											"begin": 794,
											"end": 815,
											"name": "GT"
										},
										{
											"begin": 794,
											"end": 815,
											"name": "ISZERO"
										},
										{
											"begin": 794,
											"end": 815,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 794,
											"end": 815,
											"name": "JUMPI"
										},
										{
											"begin": 794,
											"end": 815,
											"name": "INVALID"
										},
										{
											"begin": 794,
											"end": 815,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 794,
											"end": 815,
											"name": "JUMPDEST"
										},
										{
											"begin": 794,
											"end": 815,
											"name": "EQ"
										},
										{
											"begin": 785,
											"end": 817,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 785,
											"end": 817,
											"name": "JUMPI"
										},
										{
											"begin": 785,
											"end": 817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 785,
											"end": 817,
											"name": "DUP1"
										},
										{
											"begin": 785,
											"end": 817,
											"name": "REVERT"
										},
										{
											"begin": 785,
											"end": 817,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 785,
											"end": 817,
											"name": "JUMPDEST"
										},
										{
											"begin": 845,
											"end": 853,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 845,
											"end": 853,
											"name": "SLOAD"
										},
										{
											"begin": 836,
											"end": 841,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 836,
											"end": 841,
											"name": "SLOAD"
										},
										{
											"begin": 836,
											"end": 853,
											"name": "SLT"
										},
										{
											"begin": 836,
											"end": 853,
											"name": "ISZERO"
										},
										{
											"begin": 828,
											"end": 854,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 828,
											"end": 854,
											"name": "JUMPI"
										},
										{
											"begin": 828,
											"end": 854,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 828,
											"end": 854,
											"name": "DUP1"
										},
										{
											"begin": 828,
											"end": 854,
											"name": "REVERT"
										},
										{
											"begin": 828,
											"end": 854,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 828,
											"end": 854,
											"name": "JUMPDEST"
										},
										{
											"begin": 870,
											"end": 881,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "EXP"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "DUP2"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "SLOAD"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "DUP2"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "MUL"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "NOT"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "AND"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "SWAP1"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "DUP4"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "DUP2"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "GT"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "ISZERO"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "JUMPI"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "INVALID"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "JUMPDEST"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "MUL"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "OR"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "SWAP1"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "SSTORE"
										},
										{
											"begin": 865,
											"end": 881,
											"name": "POP"
										},
										{
											"begin": 899,
											"end": 900,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 892,
											"end": 896,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 892,
											"end": 900,
											"name": "DUP2"
										},
										{
											"begin": 892,
											"end": 900,
											"name": "SWAP1"
										},
										{
											"begin": 892,
											"end": 900,
											"name": "SSTORE"
										},
										{
											"begin": 892,
											"end": 900,
											"name": "POP"
										},
										{
											"begin": 742,
											"end": 908,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 916,
											"end": 1080,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 916,
											"end": 1080,
											"name": "JUMPDEST"
										},
										{
											"begin": 974,
											"end": 985,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "DUP2"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "GT"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "ISZERO"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "JUMPI"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "INVALID"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "JUMPDEST"
										},
										{
											"begin": 968,
											"end": 970,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 968,
											"end": 970,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 968,
											"end": 970,
											"name": "SWAP1"
										},
										{
											"begin": 968,
											"end": 970,
											"name": "SLOAD"
										},
										{
											"begin": 968,
											"end": 970,
											"name": "SWAP1"
										},
										{
											"begin": 968,
											"end": 970,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 968,
											"end": 970,
											"name": "EXP"
										},
										{
											"begin": 968,
											"end": 970,
											"name": "SWAP1"
										},
										{
											"begin": 968,
											"end": 970,
											"name": "DIV"
										},
										{
											"begin": 968,
											"end": 970,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 968,
											"end": 970,
											"name": "AND"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "DUP2"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "GT"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "ISZERO"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "JUMPI"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "INVALID"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "JUMPDEST"
										},
										{
											"begin": 968,
											"end": 985,
											"name": "EQ"
										},
										{
											"begin": 959,
											"end": 987,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 959,
											"end": 987,
											"name": "JUMPI"
										},
										{
											"begin": 959,
											"end": 987,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 959,
											"end": 987,
											"name": "DUP1"
										},
										{
											"begin": 959,
											"end": 987,
											"name": "REVERT"
										},
										{
											"begin": 959,
											"end": 987,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 959,
											"end": 987,
											"name": "JUMPDEST"
										},
										{
											"begin": 1023,
											"end": 1024,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1014,
											"end": 1022,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1014,
											"end": 1022,
											"name": "SLOAD"
										},
										{
											"begin": 1014,
											"end": 1024,
											"name": "MUL"
										},
										{
											"begin": 1006,
											"end": 1011,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1006,
											"end": 1011,
											"name": "SLOAD"
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "SLT"
										},
										{
											"begin": 998,
											"end": 1025,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 998,
											"end": 1025,
											"name": "JUMPI"
										},
										{
											"begin": 998,
											"end": 1025,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1025,
											"name": "DUP1"
										},
										{
											"begin": 998,
											"end": 1025,
											"name": "REVERT"
										},
										{
											"begin": 998,
											"end": 1025,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 998,
											"end": 1025,
											"name": "JUMPDEST"
										},
										{
											"begin": 1041,
											"end": 1053,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1036,
											"end": 1038,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1036,
											"end": 1038,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "EXP"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "DUP2"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "SLOAD"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "DUP2"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "MUL"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "NOT"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "AND"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "SWAP1"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "DUP4"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "DUP2"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "GT"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "ISZERO"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "JUMPI"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "INVALID"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "JUMPDEST"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "MUL"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "OR"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "SWAP1"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "SSTORE"
										},
										{
											"begin": 1036,
											"end": 1053,
											"name": "POP"
										},
										{
											"begin": 1071,
											"end": 1072,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1064,
											"end": 1068,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1072,
											"name": "DUP2"
										},
										{
											"begin": 1064,
											"end": 1072,
											"name": "SWAP1"
										},
										{
											"begin": 1064,
											"end": 1072,
											"name": "SSTORE"
										},
										{
											"begin": 1064,
											"end": 1072,
											"name": "POP"
										},
										{
											"begin": 916,
											"end": 1080,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"collect_1_N()": "953884de",
							"collect_1_Y()": "4c3bc76e",
							"collect_2_N()": "94f5c52d",
							"collect_2_Y()": "e3ed5166",
							"signal()": "640d090b",
							"tick()": "3eaf5d9f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_timeAdd\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"collect_1_N\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collect_1_Y\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collect_2_N\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collect_2_Y\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tick\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/paylock.sol\":\"Paylock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/paylock.sol\":{\"keccak256\":\"0x8ba26dc55e87900852ccf3e5f5615f6976b5d4d5287f0fd30c01ea3ec12e487f\",\"urls\":[\"bzz-raw://583602d6fb83497dbc6a5a46f497bd5730a521f1d56396993236f720e8364c39\",\"dweb:/ipfs/QmcByuyubAjb2o765hRTNf8uDj7BGWgADgMCyjn2GdH5Kv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/paylock.sol:Paylock",
								"label": "disc",
								"offset": 0,
								"slot": "0",
								"type": "t_int256"
							},
							{
								"astId": 12,
								"contract": "contracts/paylock.sol:Paylock",
								"label": "st",
								"offset": 0,
								"slot": "1",
								"type": "t_enum(State)8"
							},
							{
								"astId": 14,
								"contract": "contracts/paylock.sol:Paylock",
								"label": "clock",
								"offset": 0,
								"slot": "2",
								"type": "t_int256"
							},
							{
								"astId": 17,
								"contract": "contracts/paylock.sol:Paylock",
								"label": "timeUnit",
								"offset": 0,
								"slot": "3",
								"type": "t_int256"
							},
							{
								"astId": 19,
								"contract": "contracts/paylock.sol:Paylock",
								"label": "timeAdd",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_enum(State)8": {
								"encoding": "inplace",
								"label": "enum Paylock.State",
								"numberOfBytes": "1"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Rental": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "rent_out_resource",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "retrieve_resource",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/paylock.sol\":2417:3432  contract Rental {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/paylock.sol\":2514:2519  1 wei */\n  0x01\n    /* \"contracts/paylock.sol\":2499:2519  uint deposit = 1 wei */\n  dup1\n  sstore\n    /* \"contracts/paylock.sol\":2565:2630  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/paylock.sol\":2565:2630  constructor() public {\r... */\n  pop\n    /* \"contracts/paylock.sol\":2618:2622  true */\n  0x01\n    /* \"contracts/paylock.sol\":2597:2615  resource_available */\n  0x00\n  0x14\n    /* \"contracts/paylock.sol\":2597:2622  resource_available = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/paylock.sol\":2417:3432  contract Rental {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/paylock.sol\":2417:3432  contract Rental {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3695dd4b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbb150fbf\n      eq\n      tag_4\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"contracts/paylock.sol\":2905:3248  function retrieve_resource() external {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"contracts/paylock.sol\":2905:3248  function retrieve_resource() external {\r... */\n      pop\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/paylock.sol\":2642:2897  function rent_out_resource() external payable {  \r... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/paylock.sol\":2905:3248  function retrieve_resource() external {\r... */\n    tag_11:\n        /* \"contracts/paylock.sol\":2984:2989  false */\n      0x00\n        /* \"contracts/paylock.sol\":2962:2989  resource_available == false */\n      iszero\n      iszero\n        /* \"contracts/paylock.sol\":2962:2980  resource_available */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/paylock.sol\":2962:2989  resource_available == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/paylock.sol\":2962:3021  resource_available == false && msg.sender == resource_owner */\n      dup1\n      iszero\n      tag_15\n      jumpi\n      pop\n        /* \"contracts/paylock.sol\":3007:3021  resource_owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/paylock.sol\":2993:3021  msg.sender == resource_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/paylock.sol\":2993:3003  msg.sender */\n      caller\n        /* \"contracts/paylock.sol\":2993:3021  msg.sender == resource_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/paylock.sol\":2962:3021  resource_available == false && msg.sender == resource_owner */\n    tag_15:\n        /* \"contracts/paylock.sol\":2954:3022  require(resource_available == false && msg.sender == resource_owner) */\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n        /* \"contracts/paylock.sol\":3236:3240  true */\n      0x01\n        /* \"contracts/paylock.sol\":3215:3233  resource_available */\n      0x00\n      0x14\n        /* \"contracts/paylock.sol\":3215:3240  resource_available = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":2905:3248  function retrieve_resource() external {\r... */\n      jump\t// out\n        /* \"contracts/paylock.sol\":2642:2897  function rent_out_resource() external payable {  \r... */\n    tag_13:\n        /* \"contracts/paylock.sol\":2731:2735  true */\n      0x01\n        /* \"contracts/paylock.sol\":2709:2735  resource_available == true */\n      iszero\n      iszero\n        /* \"contracts/paylock.sol\":2709:2727  resource_available */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/paylock.sol\":2709:2735  resource_available == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/paylock.sol\":2701:2736  require(resource_available == true) */\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n        /* \"contracts/paylock.sol\":2805:2814  msg.value */\n      callvalue\n        /* \"contracts/paylock.sol\":2781:2790  balanceOf */\n      0x02\n        /* \"contracts/paylock.sol\":2781:2802  balanceOf[msg.sender] */\n      0x00\n        /* \"contracts/paylock.sol\":2791:2801  msg.sender */\n      caller\n        /* \"contracts/paylock.sol\":2781:2802  balanceOf[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/paylock.sol\":2781:2814  balanceOf[msg.sender] = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":2842:2852  msg.sender */\n      caller\n        /* \"contracts/paylock.sol\":2825:2839  resource_owner */\n      0x00\n      dup1\n        /* \"contracts/paylock.sol\":2825:2852  resource_owner = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":2884:2889  false */\n      0x00\n        /* \"contracts/paylock.sol\":2863:2881  resource_available */\n      dup1\n      0x14\n        /* \"contracts/paylock.sol\":2863:2889  resource_available = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":2642:2897  function rent_out_resource() external payable {  \r... */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122041bebaddf6004ccdf771b3b43f1b397e2a95933f7bbfebf573c829b16c6c706664736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526001805534801561001457600080fd5b506001600060146101000a81548160ff0219169083151502179055506101e28061003f6000396000f3fe60806040526004361061002d5760003560e01c80633695dd4b14610036578063bb150fbf1461004d57610034565b3661003457005b005b34801561004257600080fd5b5061004b610057565b005b6100556100ec565b005b60001515600060149054906101000a900460ff1615151480156100c657506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6100cf57600080fd5b6001600060146101000a81548160ff021916908315150217905550565b60011515600060149054906101000a900460ff1615151461010c57600080fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060146101000a81548160ff02191690831515021790555056fea264697066735822122041bebaddf6004ccdf771b3b43f1b397e2a95933f7bbfebf573c829b16c6c706664736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1E2 DUP1 PUSH2 0x3F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3695DD4B EQ PUSH2 0x36 JUMPI DUP1 PUSH4 0xBB150FBF EQ PUSH2 0x4D JUMPI PUSH2 0x34 JUMP JUMPDEST CALLDATASIZE PUSH2 0x34 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B PUSH2 0x57 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0xC6 JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xBE 0xBA 0xDD 0xF6 STOP 0x4C 0xCD 0xF7 PUSH18 0xB3B43F1B397E2A95933F7BBFEBF573C829B1 PUSH13 0x6C706664736F6C634300060000 CALLER ",
							"sourceMap": "2417:1015:0:-:0;;;2514:5;2499:20;;2565:65;8:9:-1;5:2;;;30:1;27;20:12;5:2;2565:65:0;2618:4;2597:18;;:25;;;;;;;;;;;;;;;;;;2417:1015;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061002d5760003560e01c80633695dd4b14610036578063bb150fbf1461004d57610034565b3661003457005b005b34801561004257600080fd5b5061004b610057565b005b6100556100ec565b005b60001515600060149054906101000a900460ff1615151480156100c657506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6100cf57600080fd5b6001600060146101000a81548160ff021916908315150217905550565b60011515600060149054906101000a900460ff1615151461010c57600080fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060146101000a81548160ff02191690831515021790555056fea264697066735822122041bebaddf6004ccdf771b3b43f1b397e2a95933f7bbfebf573c829b16c6c706664736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3695DD4B EQ PUSH2 0x36 JUMPI DUP1 PUSH4 0xBB150FBF EQ PUSH2 0x4D JUMPI PUSH2 0x34 JUMP JUMPDEST CALLDATASIZE PUSH2 0x34 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B PUSH2 0x57 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0xC6 JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xBE 0xBA 0xDD 0xF6 STOP 0x4C 0xCD 0xF7 PUSH18 0xB3B43F1B397E2A95933F7BBFEBF573C829B1 PUSH13 0x6C706664736F6C634300060000 CALLER ",
							"sourceMap": "2417:1015:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2905:343;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2905:343:0;;;:::i;:::-;;2642:255;;;:::i;:::-;;2905:343;2984:5;2962:27;;:18;;;;;;;;;;;:27;;;:59;;;;;3007:14;;;;;;;;;;;2993:28;;:10;:28;;;2962:59;2954:68;;;;;;3236:4;3215:18;;:25;;;;;;;;;;;;;;;;;;2905:343::o;2642:255::-;2731:4;2709:26;;:18;;;;;;;;;;;:26;;;2701:35;;;;;;2805:9;2781;:21;2791:10;2781:21;;;;;;;;;;;;;;;:33;;;;2842:10;2825:14;;:27;;;;;;;;;;;;;;;;;;2884:5;2863:18;;:26;;;;;;;;;;;;;;;;;;2642:255::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "96400",
								"executionCost": "41070",
								"totalCost": "137470"
							},
							"external": {
								"": "107",
								"rent_out_resource()": "62926",
								"retrieve_resource()": "22838"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2417,
									"end": 3432,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 2417,
									"end": 3432,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2417,
									"end": 3432,
									"name": "MSTORE"
								},
								{
									"begin": 2514,
									"end": 2519,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 2499,
									"end": 2519,
									"name": "DUP1"
								},
								{
									"begin": 2499,
									"end": 2519,
									"name": "SSTORE"
								},
								{
									"begin": 2565,
									"end": 2630,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 2565,
									"end": 2630,
									"name": "POP"
								},
								{
									"begin": 2618,
									"end": 2622,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 2597,
									"end": 2615,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2597,
									"end": 2615,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 2597,
									"end": 2622,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 2597,
									"end": 2622,
									"name": "EXP"
								},
								{
									"begin": 2597,
									"end": 2622,
									"name": "DUP2"
								},
								{
									"begin": 2597,
									"end": 2622,
									"name": "SLOAD"
								},
								{
									"begin": 2597,
									"end": 2622,
									"name": "DUP2"
								},
								{
									"begin": 2597,
									"end": 2622,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 2597,
									"end": 2622,
									"name": "MUL"
								},
								{
									"begin": 2597,
									"end": 2622,
									"name": "NOT"
								},
								{
									"begin": 2597,
									"end": 2622,
									"name": "AND"
								},
								{
									"begin": 2597,
									"end": 2622,
									"name": "SWAP1"
								},
								{
									"begin": 2597,
									"end": 2622,
									"name": "DUP4"
								},
								{
									"begin": 2597,
									"end": 2622,
									"name": "ISZERO"
								},
								{
									"begin": 2597,
									"end": 2622,
									"name": "ISZERO"
								},
								{
									"begin": 2597,
									"end": 2622,
									"name": "MUL"
								},
								{
									"begin": 2597,
									"end": 2622,
									"name": "OR"
								},
								{
									"begin": 2597,
									"end": 2622,
									"name": "SWAP1"
								},
								{
									"begin": 2597,
									"end": 2622,
									"name": "SSTORE"
								},
								{
									"begin": 2597,
									"end": 2622,
									"name": "POP"
								},
								{
									"begin": 2417,
									"end": 3432,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2417,
									"end": 3432,
									"name": "DUP1"
								},
								{
									"begin": 2417,
									"end": 3432,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2417,
									"end": 3432,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2417,
									"end": 3432,
									"name": "CODECOPY"
								},
								{
									"begin": 2417,
									"end": 3432,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2417,
									"end": 3432,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122041bebaddf6004ccdf771b3b43f1b397e2a95933f7bbfebf573c829b16c6c706664736f6c63430006000033",
									".code": [
										{
											"begin": 2417,
											"end": 3432,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "MSTORE"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "LT"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "JUMPI"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "SHR"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "DUP1"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "PUSH",
											"value": "3695DD4B"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "EQ"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "JUMPI"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "DUP1"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "PUSH",
											"value": "BB150FBF"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "EQ"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "JUMPI"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "JUMP"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "JUMPDEST"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "JUMPI"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "STOP"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "JUMPDEST"
										},
										{
											"begin": 2417,
											"end": 3432,
											"name": "STOP"
										},
										{
											"begin": 2905,
											"end": 3248,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2905,
											"end": 3248,
											"name": "JUMPDEST"
										},
										{
											"begin": 2905,
											"end": 3248,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2905,
											"end": 3248,
											"name": "POP"
										},
										{
											"begin": 2905,
											"end": 3248,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2905,
											"end": 3248,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 2905,
											"end": 3248,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2905,
											"end": 3248,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2905,
											"end": 3248,
											"name": "JUMPDEST"
										},
										{
											"begin": 2905,
											"end": 3248,
											"name": "STOP"
										},
										{
											"begin": 2642,
											"end": 2897,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2642,
											"end": 2897,
											"name": "JUMPDEST"
										},
										{
											"begin": 2642,
											"end": 2897,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2642,
											"end": 2897,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2642,
											"end": 2897,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2642,
											"end": 2897,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2642,
											"end": 2897,
											"name": "JUMPDEST"
										},
										{
											"begin": 2642,
											"end": 2897,
											"name": "STOP"
										},
										{
											"begin": 2905,
											"end": 3248,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 2905,
											"end": 3248,
											"name": "JUMPDEST"
										},
										{
											"begin": 2984,
											"end": 2989,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2989,
											"name": "ISZERO"
										},
										{
											"begin": 2962,
											"end": 2989,
											"name": "ISZERO"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "SWAP1"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "SLOAD"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "SWAP1"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "EXP"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "SWAP1"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "DIV"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "AND"
										},
										{
											"begin": 2962,
											"end": 2989,
											"name": "ISZERO"
										},
										{
											"begin": 2962,
											"end": 2989,
											"name": "ISZERO"
										},
										{
											"begin": 2962,
											"end": 2989,
											"name": "EQ"
										},
										{
											"begin": 2962,
											"end": 3021,
											"name": "DUP1"
										},
										{
											"begin": 2962,
											"end": 3021,
											"name": "ISZERO"
										},
										{
											"begin": 2962,
											"end": 3021,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2962,
											"end": 3021,
											"name": "JUMPI"
										},
										{
											"begin": 2962,
											"end": 3021,
											"name": "POP"
										},
										{
											"begin": 3007,
											"end": 3021,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3021,
											"name": "DUP1"
										},
										{
											"begin": 3007,
											"end": 3021,
											"name": "SWAP1"
										},
										{
											"begin": 3007,
											"end": 3021,
											"name": "SLOAD"
										},
										{
											"begin": 3007,
											"end": 3021,
											"name": "SWAP1"
										},
										{
											"begin": 3007,
											"end": 3021,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3007,
											"end": 3021,
											"name": "EXP"
										},
										{
											"begin": 3007,
											"end": 3021,
											"name": "SWAP1"
										},
										{
											"begin": 3007,
											"end": 3021,
											"name": "DIV"
										},
										{
											"begin": 3007,
											"end": 3021,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3007,
											"end": 3021,
											"name": "AND"
										},
										{
											"begin": 2993,
											"end": 3021,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2993,
											"end": 3021,
											"name": "AND"
										},
										{
											"begin": 2993,
											"end": 3003,
											"name": "CALLER"
										},
										{
											"begin": 2993,
											"end": 3021,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2993,
											"end": 3021,
											"name": "AND"
										},
										{
											"begin": 2993,
											"end": 3021,
											"name": "EQ"
										},
										{
											"begin": 2962,
											"end": 3021,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2962,
											"end": 3021,
											"name": "JUMPDEST"
										},
										{
											"begin": 2954,
											"end": 3022,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2954,
											"end": 3022,
											"name": "JUMPI"
										},
										{
											"begin": 2954,
											"end": 3022,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 3022,
											"name": "DUP1"
										},
										{
											"begin": 2954,
											"end": 3022,
											"name": "REVERT"
										},
										{
											"begin": 2954,
											"end": 3022,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2954,
											"end": 3022,
											"name": "JUMPDEST"
										},
										{
											"begin": 3236,
											"end": 3240,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3215,
											"end": 3233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3215,
											"end": 3233,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 3215,
											"end": 3240,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3215,
											"end": 3240,
											"name": "EXP"
										},
										{
											"begin": 3215,
											"end": 3240,
											"name": "DUP2"
										},
										{
											"begin": 3215,
											"end": 3240,
											"name": "SLOAD"
										},
										{
											"begin": 3215,
											"end": 3240,
											"name": "DUP2"
										},
										{
											"begin": 3215,
											"end": 3240,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3215,
											"end": 3240,
											"name": "MUL"
										},
										{
											"begin": 3215,
											"end": 3240,
											"name": "NOT"
										},
										{
											"begin": 3215,
											"end": 3240,
											"name": "AND"
										},
										{
											"begin": 3215,
											"end": 3240,
											"name": "SWAP1"
										},
										{
											"begin": 3215,
											"end": 3240,
											"name": "DUP4"
										},
										{
											"begin": 3215,
											"end": 3240,
											"name": "ISZERO"
										},
										{
											"begin": 3215,
											"end": 3240,
											"name": "ISZERO"
										},
										{
											"begin": 3215,
											"end": 3240,
											"name": "MUL"
										},
										{
											"begin": 3215,
											"end": 3240,
											"name": "OR"
										},
										{
											"begin": 3215,
											"end": 3240,
											"name": "SWAP1"
										},
										{
											"begin": 3215,
											"end": 3240,
											"name": "SSTORE"
										},
										{
											"begin": 3215,
											"end": 3240,
											"name": "POP"
										},
										{
											"begin": 2905,
											"end": 3248,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2642,
											"end": 2897,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2642,
											"end": 2897,
											"name": "JUMPDEST"
										},
										{
											"begin": 2731,
											"end": 2735,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2709,
											"end": 2735,
											"name": "ISZERO"
										},
										{
											"begin": 2709,
											"end": 2735,
											"name": "ISZERO"
										},
										{
											"begin": 2709,
											"end": 2727,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2727,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 2709,
											"end": 2727,
											"name": "SWAP1"
										},
										{
											"begin": 2709,
											"end": 2727,
											"name": "SLOAD"
										},
										{
											"begin": 2709,
											"end": 2727,
											"name": "SWAP1"
										},
										{
											"begin": 2709,
											"end": 2727,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2709,
											"end": 2727,
											"name": "EXP"
										},
										{
											"begin": 2709,
											"end": 2727,
											"name": "SWAP1"
										},
										{
											"begin": 2709,
											"end": 2727,
											"name": "DIV"
										},
										{
											"begin": 2709,
											"end": 2727,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2709,
											"end": 2727,
											"name": "AND"
										},
										{
											"begin": 2709,
											"end": 2735,
											"name": "ISZERO"
										},
										{
											"begin": 2709,
											"end": 2735,
											"name": "ISZERO"
										},
										{
											"begin": 2709,
											"end": 2735,
											"name": "EQ"
										},
										{
											"begin": 2701,
											"end": 2736,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2701,
											"end": 2736,
											"name": "JUMPI"
										},
										{
											"begin": 2701,
											"end": 2736,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2736,
											"name": "DUP1"
										},
										{
											"begin": 2701,
											"end": 2736,
											"name": "REVERT"
										},
										{
											"begin": 2701,
											"end": 2736,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2701,
											"end": 2736,
											"name": "JUMPDEST"
										},
										{
											"begin": 2805,
											"end": 2814,
											"name": "CALLVALUE"
										},
										{
											"begin": 2781,
											"end": 2790,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2781,
											"end": 2802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2791,
											"end": 2801,
											"name": "CALLER"
										},
										{
											"begin": 2781,
											"end": 2802,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2802,
											"name": "AND"
										},
										{
											"begin": 2781,
											"end": 2802,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2802,
											"name": "AND"
										},
										{
											"begin": 2781,
											"end": 2802,
											"name": "DUP2"
										},
										{
											"begin": 2781,
											"end": 2802,
											"name": "MSTORE"
										},
										{
											"begin": 2781,
											"end": 2802,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2802,
											"name": "ADD"
										},
										{
											"begin": 2781,
											"end": 2802,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 2802,
											"name": "DUP2"
										},
										{
											"begin": 2781,
											"end": 2802,
											"name": "MSTORE"
										},
										{
											"begin": 2781,
											"end": 2802,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2802,
											"name": "ADD"
										},
										{
											"begin": 2781,
											"end": 2802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2802,
											"name": "KECCAK256"
										},
										{
											"begin": 2781,
											"end": 2814,
											"name": "DUP2"
										},
										{
											"begin": 2781,
											"end": 2814,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 2814,
											"name": "SSTORE"
										},
										{
											"begin": 2781,
											"end": 2814,
											"name": "POP"
										},
										{
											"begin": 2842,
											"end": 2852,
											"name": "CALLER"
										},
										{
											"begin": 2825,
											"end": 2839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2839,
											"name": "DUP1"
										},
										{
											"begin": 2825,
											"end": 2852,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2825,
											"end": 2852,
											"name": "EXP"
										},
										{
											"begin": 2825,
											"end": 2852,
											"name": "DUP2"
										},
										{
											"begin": 2825,
											"end": 2852,
											"name": "SLOAD"
										},
										{
											"begin": 2825,
											"end": 2852,
											"name": "DUP2"
										},
										{
											"begin": 2825,
											"end": 2852,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2825,
											"end": 2852,
											"name": "MUL"
										},
										{
											"begin": 2825,
											"end": 2852,
											"name": "NOT"
										},
										{
											"begin": 2825,
											"end": 2852,
											"name": "AND"
										},
										{
											"begin": 2825,
											"end": 2852,
											"name": "SWAP1"
										},
										{
											"begin": 2825,
											"end": 2852,
											"name": "DUP4"
										},
										{
											"begin": 2825,
											"end": 2852,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2825,
											"end": 2852,
											"name": "AND"
										},
										{
											"begin": 2825,
											"end": 2852,
											"name": "MUL"
										},
										{
											"begin": 2825,
											"end": 2852,
											"name": "OR"
										},
										{
											"begin": 2825,
											"end": 2852,
											"name": "SWAP1"
										},
										{
											"begin": 2825,
											"end": 2852,
											"name": "SSTORE"
										},
										{
											"begin": 2825,
											"end": 2852,
											"name": "POP"
										},
										{
											"begin": 2884,
											"end": 2889,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "DUP1"
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 2863,
											"end": 2889,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2863,
											"end": 2889,
											"name": "EXP"
										},
										{
											"begin": 2863,
											"end": 2889,
											"name": "DUP2"
										},
										{
											"begin": 2863,
											"end": 2889,
											"name": "SLOAD"
										},
										{
											"begin": 2863,
											"end": 2889,
											"name": "DUP2"
										},
										{
											"begin": 2863,
											"end": 2889,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2863,
											"end": 2889,
											"name": "MUL"
										},
										{
											"begin": 2863,
											"end": 2889,
											"name": "NOT"
										},
										{
											"begin": 2863,
											"end": 2889,
											"name": "AND"
										},
										{
											"begin": 2863,
											"end": 2889,
											"name": "SWAP1"
										},
										{
											"begin": 2863,
											"end": 2889,
											"name": "DUP4"
										},
										{
											"begin": 2863,
											"end": 2889,
											"name": "ISZERO"
										},
										{
											"begin": 2863,
											"end": 2889,
											"name": "ISZERO"
										},
										{
											"begin": 2863,
											"end": 2889,
											"name": "MUL"
										},
										{
											"begin": 2863,
											"end": 2889,
											"name": "OR"
										},
										{
											"begin": 2863,
											"end": 2889,
											"name": "SWAP1"
										},
										{
											"begin": 2863,
											"end": 2889,
											"name": "SSTORE"
										},
										{
											"begin": 2863,
											"end": 2889,
											"name": "POP"
										},
										{
											"begin": 2642,
											"end": 2897,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"rent_out_resource()": "bb150fbf",
							"retrieve_resource()": "3695dd4b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"rent_out_resource\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieve_resource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/paylock.sol\":\"Rental\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/paylock.sol\":{\"keccak256\":\"0x8ba26dc55e87900852ccf3e5f5615f6976b5d4d5287f0fd30c01ea3ec12e487f\",\"urls\":[\"bzz-raw://583602d6fb83497dbc6a5a46f497bd5730a521f1d56396993236f720e8364c39\",\"dweb:/ipfs/QmcByuyubAjb2o765hRTNf8uDj7BGWgADgMCyjn2GdH5Kv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 304,
								"contract": "contracts/paylock.sol:Rental",
								"label": "resource_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 306,
								"contract": "contracts/paylock.sol:Rental",
								"label": "resource_available",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 309,
								"contract": "contracts/paylock.sol:Rental",
								"label": "deposit",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 313,
								"contract": "contracts/paylock.sol:Rental",
								"label": "balanceOf",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Supplier": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pp",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "rr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "aquire_resource",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finish",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRental",
							"outputs": [
								{
									"internalType": "address",
									"name": "rentalAddr",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "p",
							"outputs": [
								{
									"internalType": "contract Paylock",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "r",
							"outputs": [
								{
									"internalType": "contract Rental",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "return_resource",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/paylock.sol\":1362:2413  contract Supplier {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/paylock.sol\":1519:1524  false */\n  0x00\n    /* \"contracts/paylock.sol\":1501:1524  bool hasResouce = false */\n  0x01\n  exp(0x0100, 0x15)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/paylock.sol\":1537:1675  constructor(address pp,address payable rr) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/paylock.sol\":1537:1675  constructor(address pp,address payable rr) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x40\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"contracts/paylock.sol\":1537:1675  constructor(address pp,address payable rr) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/paylock.sol\":1610:1612  pp */\n  dup2\n    /* \"contracts/paylock.sol\":1598:1599  p */\n  0x00\n  dup1\n    /* \"contracts/paylock.sol\":1598:1613  p = Paylock(pp) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/paylock.sol\":1635:1637  rr */\n  dup1\n    /* \"contracts/paylock.sol\":1624:1625  r */\n  0x01\n  0x00\n    /* \"contracts/paylock.sol\":1624:1638  r = Rental(rr) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/paylock.sol\":1654:1667  State.Working */\n  0x00\n    /* \"contracts/paylock.sol\":1649:1651  st */\n  0x01\n  0x14\n    /* \"contracts/paylock.sol\":1649:1667  st = State.Working */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x01\n  dup2\n  gt\n  iszero\n  tag_5\n  jumpi\n  invalid\ntag_5:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/paylock.sol\":1537:1675  constructor(address pp,address payable rr) public {\r... */\n  pop\n  pop\n    /* \"contracts/paylock.sol\":1362:2413  contract Supplier {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/paylock.sol\":1362:2413  contract Supplier {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x391913f5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4013fd04\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6c8ae38c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9ae8886a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xca6f5fc9\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xd56b2889\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"contracts/paylock.sol\":1931:2089  function aquire_resource() external payable {\r... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/paylock.sol\":1683:1780  function getRental() public view returns (address rentalAddr){\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"contracts/paylock.sol\":1683:1780  function getRental() public view returns (address rentalAddr){\r... */\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/paylock.sol\":1416:1431  Rental public r */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_18:\n        /* \"contracts/paylock.sol\":1416:1431  Rental public r */\n      pop\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/paylock.sol\":1393:1409  Paylock public p */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_21:\n        /* \"contracts/paylock.sol\":1393:1409  Paylock public p */\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/paylock.sol\":2097:2232  function return_resource() external {\r... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n        /* \"contracts/paylock.sol\":2097:2232  function return_resource() external {\r... */\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/paylock.sol\":1792:1919  function finish() external {\r... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"contracts/paylock.sol\":1792:1919  function finish() external {\r... */\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/paylock.sol\":1931:2089  function aquire_resource() external payable {\r... */\n    tag_14:\n        /* \"contracts/paylock.sol\":1995:2005  hasResouce */\n      0x01\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/paylock.sol\":1994:2005  !hasResouce */\n      iszero\n        /* \"contracts/paylock.sol\":1986:2006  require(!hasResouce) */\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n        /* \"contracts/paylock.sol\":2017:2018  r */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/paylock.sol\":2017:2036  r.rent_out_resource */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb150fbf\n        /* \"contracts/paylock.sol\":2043:2050  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/paylock.sol\":2017:2053  r.rent_out_resource.value(1 ether)() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_32:\n        /* \"contracts/paylock.sol\":2017:2053  r.rent_out_resource.value(1 ether)() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"contracts/paylock.sol\":2017:2053  r.rent_out_resource.value(1 ether)() */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/paylock.sol\":2077:2081  true */\n      0x01\n        /* \"contracts/paylock.sol\":2064:2074  hasResouce */\n      dup1\n      0x15\n        /* \"contracts/paylock.sol\":2064:2081  hasResouce = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":1931:2089  function aquire_resource() external payable {\r... */\n      jump\t// out\n        /* \"contracts/paylock.sol\":1683:1780  function getRental() public view returns (address rentalAddr){\r... */\n    tag_17:\n        /* \"contracts/paylock.sol\":1725:1743  address rentalAddr */\n      0x00\n        /* \"contracts/paylock.sol\":1770:1771  r */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/paylock.sol\":1755:1772  return address(r) */\n      swap1\n      pop\n        /* \"contracts/paylock.sol\":1683:1780  function getRental() public view returns (address rentalAddr){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/paylock.sol\":1416:1431  Rental public r */\n    tag_20:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/paylock.sol\":1393:1409  Paylock public p */\n    tag_23:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/paylock.sol\":2097:2232  function return_resource() external {\r... */\n    tag_26:\n        /* \"contracts/paylock.sol\":2152:2162  hasResouce */\n      0x01\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/paylock.sol\":2144:2163  require(hasResouce) */\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n        /* \"contracts/paylock.sol\":2174:2175  r */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/paylock.sol\":2174:2193  r.retrieve_resource */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3695dd4b\n        /* \"contracts/paylock.sol\":2174:2195  r.retrieve_resource() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_38:\n        /* \"contracts/paylock.sol\":2174:2195  r.retrieve_resource() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_40:\n        /* \"contracts/paylock.sol\":2174:2195  r.retrieve_resource() */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/paylock.sol\":2219:2224  false */\n      0x00\n        /* \"contracts/paylock.sol\":2206:2216  hasResouce */\n      0x01\n      0x15\n        /* \"contracts/paylock.sol\":2206:2224  hasResouce = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":2097:2232  function return_resource() external {\r... */\n      jump\t// out\n        /* \"contracts/paylock.sol\":1792:1919  function finish() external {\r... */\n    tag_29:\n        /* \"contracts/paylock.sol\":1845:1858  State.Working */\n      0x00\n        /* \"contracts/paylock.sol\":1839:1858  st == State.Working */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_42\n      jumpi\n      invalid\n    tag_42:\n        /* \"contracts/paylock.sol\":1839:1841  st */\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/paylock.sol\":1839:1858  st == State.Working */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_43\n      jumpi\n      invalid\n    tag_43:\n      eq\n        /* \"contracts/paylock.sol\":1830:1859  require (st == State.Working) */\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n        /* \"contracts/paylock.sol\":1870:1871  p */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/paylock.sol\":1870:1878  p.signal */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x640d090b\n        /* \"contracts/paylock.sol\":1870:1880  p.signal() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_45:\n        /* \"contracts/paylock.sol\":1870:1880  p.signal() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_47:\n        /* \"contracts/paylock.sol\":1870:1880  p.signal() */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/paylock.sol\":1896:1911  State.Completed */\n      0x01\n        /* \"contracts/paylock.sol\":1891:1893  st */\n      dup1\n      0x14\n        /* \"contracts/paylock.sol\":1891:1911  st = State.Completed */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x01\n      dup2\n      gt\n      iszero\n      tag_48\n      jumpi\n      invalid\n    tag_48:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/paylock.sol\":1792:1919  function finish() external {\r... */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201f45c591386faf672b937c3b0b0cd99651eba80a0d805d6ddb314b12e910f85364736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526000600160156101000a81548160ff02191690831515021790555034801561002b57600080fd5b506040516105ba3803806105ba8339818101604052604081101561004e57600080fd5b810190808051906020019092919080519060200190929190505050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160146101000a81548160ff0219169083600181111561010957fe5b0217905550505061049b8061011f6000396000f3fe6080604052600436106100595760003560e01c8063391913f5146100625780634013fd041461006c5780636c8ae38c146100c35780639ae8886a1461011a578063ca6f5fc914610171578063d56b28891461018857610060565b3661006057005b005b61006a61019f565b005b34801561007857600080fd5b50610081610260565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100cf57600080fd5b506100d861028a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012657600080fd5b5061012f6102b0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561017d57600080fd5b506101866102d5565b005b34801561019457600080fd5b5061019d61038d565b005b600160159054906101000a900460ff16156101b957600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb150fbf670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b15801561022b57600080fd5b505af115801561023f573d6000803e3d6000fd5b505050505060018060156101000a81548160ff021916908315150217905550565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160159054906101000a900460ff166102ee57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633695dd4b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561035857600080fd5b505af115801561036c573d6000803e3d6000fd5b505050506000600160156101000a81548160ff021916908315150217905550565b6000600181111561039a57fe5b600160149054906101000a900460ff1660018111156103b557fe5b146103bf57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663640d090b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561042857600080fd5b505af115801561043c573d6000803e3d6000fd5b5050505060018060146101000a81548160ff0219169083600181111561045e57fe5b021790555056fea26469706673582212201f45c591386faf672b937c3b0b0cd99651eba80a0d805d6ddb314b12e910f85364736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5BA CODESIZE SUB DUP1 PUSH2 0x5BA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x109 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x49B DUP1 PUSH2 0x11F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x391913F5 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0x4013FD04 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x6C8AE38C EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x9AE8886A EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xCA6F5FC9 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xD56B2889 EQ PUSH2 0x188 JUMPI PUSH2 0x60 JUMP JUMPDEST CALLDATASIZE PUSH2 0x60 JUMPI STOP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0x19F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81 PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD8 PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x2D5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19D PUSH2 0x38D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBB150FBF PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x1 DUP1 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3695DD4B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x39A JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3B5 JUMPI INVALID JUMPDEST EQ PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x640D090B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x45E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F GASLIMIT 0xC5 SWAP2 CODESIZE PUSH16 0xAF672B937C3B0B0CD99651EBA80A0D80 0x5D PUSH14 0xDB314B12E910F85364736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "1362:1051:0:-:0;;;1519:5;1501:23;;;;;;;;;;;;;;;;;;;;1537:138;8:9:-1;5:2;;;30:1;27;20:12;5:2;1537:138:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1537:138:0;;;;;;;;;;;;;;;;;;;;;;;;;1610:2;1598:1;;:15;;;;;;;;;;;;;;;;;;1635:2;1624:1;;:14;;;;;;;;;;;;;;;;;;1654:13;1649:2;;:18;;;;;;;;;;;;;;;;;;;;;;;;1537:138;;1362:1051;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100595760003560e01c8063391913f5146100625780634013fd041461006c5780636c8ae38c146100c35780639ae8886a1461011a578063ca6f5fc914610171578063d56b28891461018857610060565b3661006057005b005b61006a61019f565b005b34801561007857600080fd5b50610081610260565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100cf57600080fd5b506100d861028a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012657600080fd5b5061012f6102b0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561017d57600080fd5b506101866102d5565b005b34801561019457600080fd5b5061019d61038d565b005b600160159054906101000a900460ff16156101b957600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb150fbf670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b15801561022b57600080fd5b505af115801561023f573d6000803e3d6000fd5b505050505060018060156101000a81548160ff021916908315150217905550565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160159054906101000a900460ff166102ee57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633695dd4b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561035857600080fd5b505af115801561036c573d6000803e3d6000fd5b505050506000600160156101000a81548160ff021916908315150217905550565b6000600181111561039a57fe5b600160149054906101000a900460ff1660018111156103b557fe5b146103bf57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663640d090b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561042857600080fd5b505af115801561043c573d6000803e3d6000fd5b5050505060018060146101000a81548160ff0219169083600181111561045e57fe5b021790555056fea26469706673582212201f45c591386faf672b937c3b0b0cd99651eba80a0d805d6ddb314b12e910f85364736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x391913F5 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0x4013FD04 EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x6C8AE38C EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x9AE8886A EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xCA6F5FC9 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xD56B2889 EQ PUSH2 0x188 JUMPI PUSH2 0x60 JUMP JUMPDEST CALLDATASIZE PUSH2 0x60 JUMPI STOP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0x19F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x81 PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD8 PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x2D5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19D PUSH2 0x38D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBB150FBF PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x1 DUP1 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3695DD4B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x39A JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3B5 JUMPI INVALID JUMPDEST EQ PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x640D090B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x45E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F GASLIMIT 0xC5 SWAP2 CODESIZE PUSH16 0xAF672B937C3B0B0CD99651EBA80A0D80 0x5D PUSH14 0xDB314B12E910F85364736F6C6343 STOP MOD STOP STOP CALLER ",
							"sourceMap": "1362:1051:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1931:158;;;:::i;:::-;;1683:97;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1683:97:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1416:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1416:15:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1393:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1393:16:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2097:135;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2097:135:0;;;:::i;:::-;;1792:127;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1792:127:0;;;:::i;:::-;;1931:158;1995:10;;;;;;;;;;;1994:11;1986:20;;;;;;2017:1;;;;;;;;;;;:19;;;2043:7;2017:36;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2017:36:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2017:36:0;;;;;2077:4;2064:10;;:17;;;;;;;;;;;;;;;;;;1931:158::o;1683:97::-;1725:18;1770:1;;;;;;;;;;;1755:17;;1683:97;:::o;1416:15::-;;;;;;;;;;;;;:::o;1393:16::-;;;;;;;;;;;;;:::o;2097:135::-;2152:10;;;;;;;;;;;2144:19;;;;;;2174:1;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2174:21:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2174:21:0;;;;2219:5;2206:10;;:18;;;;;;;;;;;;;;;;;;2097:135::o;1792:127::-;1845:13;1839:19;;;;;;;;:2;;;;;;;;;;;:19;;;;;;;;;1830:29;;;;;;1870:1;;;;;;;;;;;:8;;;:10;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1870:10:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1870:10:0;;;;1896:15;1891:2;;:20;;;;;;;;;;;;;;;;;;;;;;;;1792:127::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "235800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "195",
								"aquire_resource()": "infinite",
								"finish()": "infinite",
								"getRental()": "1061",
								"p()": "1097",
								"r()": "1075",
								"return_resource()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1362,
									"end": 2413,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1362,
									"end": 2413,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1362,
									"end": 2413,
									"name": "MSTORE"
								},
								{
									"begin": 1519,
									"end": 1524,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "PUSH",
									"value": "15"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "EXP"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "DUP2"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "SLOAD"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "DUP2"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "MUL"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "NOT"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "AND"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "SWAP1"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "DUP4"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "ISZERO"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "ISZERO"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "MUL"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "OR"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "SWAP1"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "SSTORE"
								},
								{
									"begin": 1501,
									"end": 1524,
									"name": "POP"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "POP"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "MLOAD"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "CODESIZE"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "SUB"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "DUP1"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "DUP4"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "CODECOPY"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "DUP2"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "DUP2"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "ADD"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "DUP2"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "ADD"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "SWAP1"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "DUP1"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "DUP1"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "MLOAD"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "SWAP1"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "ADD"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "SWAP1"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "SWAP3"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "SWAP2"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "SWAP1"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "DUP1"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "MLOAD"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "SWAP1"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "ADD"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "SWAP1"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "SWAP3"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "SWAP2"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "SWAP1"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "POP"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "POP"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "POP"
								},
								{
									"begin": 1610,
									"end": 1612,
									"name": "DUP2"
								},
								{
									"begin": 1598,
									"end": 1599,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1598,
									"end": 1599,
									"name": "DUP1"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "EXP"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "DUP2"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "SLOAD"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "DUP2"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "MUL"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "NOT"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "AND"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "SWAP1"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "DUP4"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "AND"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "MUL"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "OR"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "SWAP1"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "SSTORE"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "POP"
								},
								{
									"begin": 1635,
									"end": 1637,
									"name": "DUP1"
								},
								{
									"begin": 1624,
									"end": 1625,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1624,
									"end": 1625,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1624,
									"end": 1638,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1624,
									"end": 1638,
									"name": "EXP"
								},
								{
									"begin": 1624,
									"end": 1638,
									"name": "DUP2"
								},
								{
									"begin": 1624,
									"end": 1638,
									"name": "SLOAD"
								},
								{
									"begin": 1624,
									"end": 1638,
									"name": "DUP2"
								},
								{
									"begin": 1624,
									"end": 1638,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1624,
									"end": 1638,
									"name": "MUL"
								},
								{
									"begin": 1624,
									"end": 1638,
									"name": "NOT"
								},
								{
									"begin": 1624,
									"end": 1638,
									"name": "AND"
								},
								{
									"begin": 1624,
									"end": 1638,
									"name": "SWAP1"
								},
								{
									"begin": 1624,
									"end": 1638,
									"name": "DUP4"
								},
								{
									"begin": 1624,
									"end": 1638,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1624,
									"end": 1638,
									"name": "AND"
								},
								{
									"begin": 1624,
									"end": 1638,
									"name": "MUL"
								},
								{
									"begin": 1624,
									"end": 1638,
									"name": "OR"
								},
								{
									"begin": 1624,
									"end": 1638,
									"name": "SWAP1"
								},
								{
									"begin": 1624,
									"end": 1638,
									"name": "SSTORE"
								},
								{
									"begin": 1624,
									"end": 1638,
									"name": "POP"
								},
								{
									"begin": 1654,
									"end": 1667,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1649,
									"end": 1651,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1649,
									"end": 1651,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "EXP"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "DUP2"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "SLOAD"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "DUP2"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "MUL"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "NOT"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "AND"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "SWAP1"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "DUP4"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "DUP2"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "GT"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "ISZERO"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "JUMPI"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "INVALID"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "JUMPDEST"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "MUL"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "OR"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "SWAP1"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "SSTORE"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "POP"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "POP"
								},
								{
									"begin": 1537,
									"end": 1675,
									"name": "POP"
								},
								{
									"begin": 1362,
									"end": 2413,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1362,
									"end": 2413,
									"name": "DUP1"
								},
								{
									"begin": 1362,
									"end": 2413,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1362,
									"end": 2413,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1362,
									"end": 2413,
									"name": "CODECOPY"
								},
								{
									"begin": 1362,
									"end": 2413,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1362,
									"end": 2413,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201f45c591386faf672b937c3b0b0cd99651eba80a0d805d6ddb314b12e910f85364736f6c63430006000033",
									".code": [
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "MSTORE"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "LT"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "JUMPI"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "SHR"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "DUP1"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH",
											"value": "391913F5"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "EQ"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "JUMPI"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "DUP1"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH",
											"value": "4013FD04"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "EQ"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "JUMPI"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "DUP1"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH",
											"value": "6C8AE38C"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "EQ"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "JUMPI"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "DUP1"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH",
											"value": "9AE8886A"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "EQ"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "JUMPI"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "DUP1"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH",
											"value": "CA6F5FC9"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "EQ"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "JUMPI"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "DUP1"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH",
											"value": "D56B2889"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "EQ"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "JUMPI"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "JUMP"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "JUMPDEST"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "JUMPI"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "STOP"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "JUMPDEST"
										},
										{
											"begin": 1362,
											"end": 2413,
											"name": "STOP"
										},
										{
											"begin": 1931,
											"end": 2089,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1931,
											"end": 2089,
											"name": "JUMPDEST"
										},
										{
											"begin": 1931,
											"end": 2089,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1931,
											"end": 2089,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1931,
											"end": 2089,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1931,
											"end": 2089,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1931,
											"end": 2089,
											"name": "JUMPDEST"
										},
										{
											"begin": 1931,
											"end": 2089,
											"name": "STOP"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "JUMPDEST"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "POP"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "JUMPDEST"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "MLOAD"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "DUP1"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "DUP3"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "AND"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "AND"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "DUP2"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "MSTORE"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "ADD"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "SWAP2"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "POP"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "POP"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "MLOAD"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "DUP1"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "SWAP2"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "SUB"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "SWAP1"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "RETURN"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "JUMPDEST"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "POP"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "JUMPDEST"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "MLOAD"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "DUP1"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "DUP3"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "AND"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "AND"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "DUP2"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "MSTORE"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "ADD"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "SWAP2"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "POP"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "POP"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "MLOAD"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "DUP1"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "SWAP2"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "SUB"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "SWAP1"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "RETURN"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "JUMPDEST"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "POP"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "JUMPDEST"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "MLOAD"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "DUP3"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "AND"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "AND"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "MSTORE"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "SWAP2"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "POP"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "POP"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "MLOAD"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "SWAP2"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "SUB"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "RETURN"
										},
										{
											"begin": 2097,
											"end": 2232,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 2097,
											"end": 2232,
											"name": "JUMPDEST"
										},
										{
											"begin": 2097,
											"end": 2232,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2097,
											"end": 2232,
											"name": "POP"
										},
										{
											"begin": 2097,
											"end": 2232,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2097,
											"end": 2232,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2097,
											"end": 2232,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2097,
											"end": 2232,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2097,
											"end": 2232,
											"name": "JUMPDEST"
										},
										{
											"begin": 2097,
											"end": 2232,
											"name": "STOP"
										},
										{
											"begin": 1792,
											"end": 1919,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1792,
											"end": 1919,
											"name": "JUMPDEST"
										},
										{
											"begin": 1792,
											"end": 1919,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1792,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1792,
											"end": 1919,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1792,
											"end": 1919,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1792,
											"end": 1919,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1792,
											"end": 1919,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1792,
											"end": 1919,
											"name": "JUMPDEST"
										},
										{
											"begin": 1792,
											"end": 1919,
											"name": "STOP"
										},
										{
											"begin": 1931,
											"end": 2089,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1931,
											"end": 2089,
											"name": "JUMPDEST"
										},
										{
											"begin": 1995,
											"end": 2005,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1995,
											"end": 2005,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 1995,
											"end": 2005,
											"name": "SWAP1"
										},
										{
											"begin": 1995,
											"end": 2005,
											"name": "SLOAD"
										},
										{
											"begin": 1995,
											"end": 2005,
											"name": "SWAP1"
										},
										{
											"begin": 1995,
											"end": 2005,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1995,
											"end": 2005,
											"name": "EXP"
										},
										{
											"begin": 1995,
											"end": 2005,
											"name": "SWAP1"
										},
										{
											"begin": 1995,
											"end": 2005,
											"name": "DIV"
										},
										{
											"begin": 1995,
											"end": 2005,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1995,
											"end": 2005,
											"name": "AND"
										},
										{
											"begin": 1994,
											"end": 2005,
											"name": "ISZERO"
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "JUMPI"
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "DUP1"
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "REVERT"
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "JUMPDEST"
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "SLOAD"
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "EXP"
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "SWAP1"
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "DIV"
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "AND"
										},
										{
											"begin": 2017,
											"end": 2036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2017,
											"end": 2036,
											"name": "AND"
										},
										{
											"begin": 2017,
											"end": 2036,
											"name": "PUSH",
											"value": "BB150FBF"
										},
										{
											"begin": 2043,
											"end": 2050,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "MLOAD"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "DUP3"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "AND"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "SHL"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "DUP2"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "MSTORE"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "ADD"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "MLOAD"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "DUP4"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "SUB"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "DUP2"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "DUP6"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "DUP9"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "DUP1"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "GAS"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "CALL"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "POP"
										},
										{
											"begin": 2017,
											"end": 2053,
											"name": "POP"
										},
										{
											"begin": 2077,
											"end": 2081,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2064,
											"end": 2074,
											"name": "DUP1"
										},
										{
											"begin": 2064,
											"end": 2074,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "EXP"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "DUP2"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "SLOAD"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "DUP2"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "MUL"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "NOT"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "AND"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "SWAP1"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "DUP4"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "ISZERO"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "ISZERO"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "MUL"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "OR"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "SWAP1"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "SSTORE"
										},
										{
											"begin": 2064,
											"end": 2081,
											"name": "POP"
										},
										{
											"begin": 1931,
											"end": 2089,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "JUMPDEST"
										},
										{
											"begin": 1725,
											"end": 1743,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "SWAP1"
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "SLOAD"
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "SWAP1"
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "EXP"
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "SWAP1"
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "DIV"
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "AND"
										},
										{
											"begin": 1755,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1772,
											"name": "POP"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "SWAP1"
										},
										{
											"begin": 1683,
											"end": 1780,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "JUMPDEST"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "SWAP1"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "SLOAD"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "SWAP1"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "EXP"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "SWAP1"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "DIV"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "AND"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "DUP2"
										},
										{
											"begin": 1416,
											"end": 1431,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "JUMPDEST"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "SLOAD"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "EXP"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "DIV"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "AND"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1409,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2097,
											"end": 2232,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2097,
											"end": 2232,
											"name": "JUMPDEST"
										},
										{
											"begin": 2152,
											"end": 2162,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2152,
											"end": 2162,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 2152,
											"end": 2162,
											"name": "SWAP1"
										},
										{
											"begin": 2152,
											"end": 2162,
											"name": "SLOAD"
										},
										{
											"begin": 2152,
											"end": 2162,
											"name": "SWAP1"
										},
										{
											"begin": 2152,
											"end": 2162,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2152,
											"end": 2162,
											"name": "EXP"
										},
										{
											"begin": 2152,
											"end": 2162,
											"name": "SWAP1"
										},
										{
											"begin": 2152,
											"end": 2162,
											"name": "DIV"
										},
										{
											"begin": 2152,
											"end": 2162,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2152,
											"end": 2162,
											"name": "AND"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "JUMPI"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "DUP1"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "REVERT"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "JUMPDEST"
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "SWAP1"
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "SLOAD"
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "SWAP1"
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "EXP"
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "SWAP1"
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "DIV"
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "AND"
										},
										{
											"begin": 2174,
											"end": 2193,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2174,
											"end": 2193,
											"name": "AND"
										},
										{
											"begin": 2174,
											"end": 2193,
											"name": "PUSH",
											"value": "3695DD4B"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "MLOAD"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "DUP2"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "AND"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "SHL"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "DUP2"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "MSTORE"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "ADD"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "MLOAD"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "DUP1"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "DUP4"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "SUB"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "DUP2"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "DUP8"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "DUP1"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "POP"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "GAS"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "CALL"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "POP"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "POP"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "POP"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "POP"
										},
										{
											"begin": 2219,
											"end": 2224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2206,
											"end": 2216,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2206,
											"end": 2216,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "EXP"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "DUP2"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "SLOAD"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "DUP2"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "MUL"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "NOT"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "AND"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "SWAP1"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "DUP4"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "ISZERO"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "ISZERO"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "MUL"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "OR"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "SWAP1"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "SSTORE"
										},
										{
											"begin": 2206,
											"end": 2224,
											"name": "POP"
										},
										{
											"begin": 2097,
											"end": 2232,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1792,
											"end": 1919,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1792,
											"end": 1919,
											"name": "JUMPDEST"
										},
										{
											"begin": 1845,
											"end": 1858,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "DUP2"
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "GT"
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "ISZERO"
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "JUMPI"
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "INVALID"
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "JUMPDEST"
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "SWAP1"
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "SLOAD"
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "SWAP1"
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "EXP"
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "SWAP1"
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "DIV"
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "AND"
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "DUP2"
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "GT"
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "ISZERO"
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "JUMPI"
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "INVALID"
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "JUMPDEST"
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "EQ"
										},
										{
											"begin": 1830,
											"end": 1859,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1830,
											"end": 1859,
											"name": "JUMPI"
										},
										{
											"begin": 1830,
											"end": 1859,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1859,
											"name": "DUP1"
										},
										{
											"begin": 1830,
											"end": 1859,
											"name": "REVERT"
										},
										{
											"begin": 1830,
											"end": 1859,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1830,
											"end": 1859,
											"name": "JUMPDEST"
										},
										{
											"begin": 1870,
											"end": 1871,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1871,
											"name": "DUP1"
										},
										{
											"begin": 1870,
											"end": 1871,
											"name": "SWAP1"
										},
										{
											"begin": 1870,
											"end": 1871,
											"name": "SLOAD"
										},
										{
											"begin": 1870,
											"end": 1871,
											"name": "SWAP1"
										},
										{
											"begin": 1870,
											"end": 1871,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1870,
											"end": 1871,
											"name": "EXP"
										},
										{
											"begin": 1870,
											"end": 1871,
											"name": "SWAP1"
										},
										{
											"begin": 1870,
											"end": 1871,
											"name": "DIV"
										},
										{
											"begin": 1870,
											"end": 1871,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1870,
											"end": 1871,
											"name": "AND"
										},
										{
											"begin": 1870,
											"end": 1878,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1870,
											"end": 1878,
											"name": "AND"
										},
										{
											"begin": 1870,
											"end": 1878,
											"name": "PUSH",
											"value": "640D090B"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "MLOAD"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "AND"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "SHL"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "MSTORE"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "ADD"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "MLOAD"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "DUP1"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "DUP4"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "SUB"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "DUP8"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "DUP1"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "GAS"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "CALL"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1870,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1896,
											"end": 1911,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1891,
											"end": 1893,
											"name": "DUP1"
										},
										{
											"begin": 1891,
											"end": 1893,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "EXP"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "DUP2"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "SLOAD"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "DUP2"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "MUL"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "NOT"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "AND"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "SWAP1"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "DUP4"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "DUP2"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "GT"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "ISZERO"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "JUMPI"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "INVALID"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "JUMPDEST"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "MUL"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "OR"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "SWAP1"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "SSTORE"
										},
										{
											"begin": 1891,
											"end": 1911,
											"name": "POP"
										},
										{
											"begin": 1792,
											"end": 1919,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"aquire_resource()": "391913f5",
							"finish()": "d56b2889",
							"getRental()": "4013fd04",
							"p()": "9ae8886a",
							"r()": "6c8ae38c",
							"return_resource()": "ca6f5fc9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pp\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"rr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"aquire_resource\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finish\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRental\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"rentalAddr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"p\",\"outputs\":[{\"internalType\":\"contract Paylock\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"r\",\"outputs\":[{\"internalType\":\"contract Rental\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"return_resource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/paylock.sol\":\"Supplier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/paylock.sol\":{\"keccak256\":\"0x8ba26dc55e87900852ccf3e5f5615f6976b5d4d5287f0fd30c01ea3ec12e487f\",\"urls\":[\"bzz-raw://583602d6fb83497dbc6a5a46f497bd5730a521f1d56396993236f720e8364c39\",\"dweb:/ipfs/QmcByuyubAjb2o765hRTNf8uDj7BGWgADgMCyjn2GdH5Kv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 187,
								"contract": "contracts/paylock.sol:Supplier",
								"label": "p",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(Paylock)185"
							},
							{
								"astId": 189,
								"contract": "contracts/paylock.sol:Supplier",
								"label": "r",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(Rental)376"
							},
							{
								"astId": 194,
								"contract": "contracts/paylock.sol:Supplier",
								"label": "st",
								"offset": 20,
								"slot": "1",
								"type": "t_enum(State)192"
							},
							{
								"astId": 197,
								"contract": "contracts/paylock.sol:Supplier",
								"label": "hasResouce",
								"offset": 21,
								"slot": "1",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(Paylock)185": {
								"encoding": "inplace",
								"label": "contract Paylock",
								"numberOfBytes": "20"
							},
							"t_contract(Rental)376": {
								"encoding": "inplace",
								"label": "contract Rental",
								"numberOfBytes": "20"
							},
							"t_enum(State)192": {
								"encoding": "inplace",
								"label": "enum Supplier.State",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/paylock.sol": {
				"ast": {
					"absolutePath": "contracts/paylock.sol",
					"exportedSymbols": {
						"Paylock": [
							185
						],
						"Rental": [
							376
						],
						"Supplier": [
							302
						]
					},
					"id": 377,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 185,
							"linearizedBaseContracts": [
								185
							],
							"name": "Paylock",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Paylock.State",
									"id": 8,
									"members": [
										{
											"id": 2,
											"name": "Working",
											"nodeType": "EnumValue",
											"src": "116:7:0"
										},
										{
											"id": 3,
											"name": "Completed",
											"nodeType": "EnumValue",
											"src": "126:9:0"
										},
										{
											"id": 4,
											"name": "Done_1",
											"nodeType": "EnumValue",
											"src": "138:6:0"
										},
										{
											"id": 5,
											"name": "Delay",
											"nodeType": "EnumValue",
											"src": "147:5:0"
										},
										{
											"id": 6,
											"name": "Done_2",
											"nodeType": "EnumValue",
											"src": "155:6:0"
										},
										{
											"id": 7,
											"name": "Forfeit",
											"nodeType": "EnumValue",
											"src": "164:7:0"
										}
									],
									"name": "State",
									"nodeType": "EnumDefinition",
									"src": "103:70:0"
								},
								{
									"constant": false,
									"id": 10,
									"name": "disc",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 185,
									"src": "185:8:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 9,
										"name": "int",
										"nodeType": "ElementaryTypeName",
										"src": "185:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"name": "st",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 185,
									"src": "200:8:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_State_$8",
										"typeString": "enum Paylock.State"
									},
									"typeName": {
										"contractScope": null,
										"id": 11,
										"name": "State",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 8,
										"src": "200:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_State_$8",
											"typeString": "enum Paylock.State"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 14,
									"name": "clock",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 185,
									"src": "217:9:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 13,
										"name": "int",
										"nodeType": "ElementaryTypeName",
										"src": "217:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"name": "timeUnit",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 185,
									"src": "233:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 15,
										"name": "int",
										"nodeType": "ElementaryTypeName",
										"src": "233:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "34",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "248:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 19,
									"name": "timeAdd",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 185,
									"src": "258:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 18,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "258:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "323:105:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 24,
														"name": "st",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "334:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 25,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "339:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																"typeString": "type(enum Paylock.State)"
															}
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Working",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "339:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"src": "334:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$8",
														"typeString": "enum Paylock.State"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "334:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 29,
														"name": "disc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "363:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "370:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "363:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "363:8:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 33,
														"name": "clock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "382:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "390:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "382:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "382:9:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 37,
														"name": "timeAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "402:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 38,
														"name": "_timeAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "412:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "402:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "402:18:0"
											}
										]
									},
									"documentation": null,
									"id": 42,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"name": "_timeAdd",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 42,
												"src": "298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "297:18:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "323:0:0"
									},
									"scope": 185,
									"src": "286:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "461:100:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$8",
																"typeString": "enum Paylock.State"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 46,
																"name": "st",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "481:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 47,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "487:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																		"typeString": "type(enum Paylock.State)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Working",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "487:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"src": "481:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															394,
															395
														],
														"referencedDeclaration": 394,
														"src": "472:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "472:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "472:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 52,
														"name": "st",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "513:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 53,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "518:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																"typeString": "type(enum Paylock.State)"
															}
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Completed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "518:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"src": "513:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$8",
														"typeString": "enum Paylock.State"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "513:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 57,
														"name": "disc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "544:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3130",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "551:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "544:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "544:9:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "640d090b",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "signal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "451:2:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "461:0:0"
									},
									"scope": 185,
									"src": "436:125:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "599:135:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$8",
																"typeString": "enum Paylock.State"
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 66,
																"name": "st",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "619:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 67,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "625:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																		"typeString": "type(enum Paylock.State)"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Completed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "625:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"src": "619:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 65,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															394,
															395
														],
														"referencedDeclaration": 394,
														"src": "610:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "610:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "610:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 73,
																"name": "clock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "661:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 74,
																"name": "timeUnit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "669:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "661:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 72,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															394,
															395
														],
														"referencedDeclaration": 394,
														"src": "653:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "653:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "653:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 78,
														"name": "st",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "689:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 79,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "694:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																"typeString": "type(enum Paylock.State)"
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Done_1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "694:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"src": "689:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$8",
														"typeString": "enum Paylock.State"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "689:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 83,
														"name": "disc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "717:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3130",
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "724:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "717:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "717:9:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4c3bc76e",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "collect_1_Y",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "589:2:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "599:0:0"
									},
									"scope": 185,
									"src": "569:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "774:134:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$8",
																"typeString": "enum Paylock.State"
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 92,
																"name": "st",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "794:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 93,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "800:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																		"typeString": "type(enum Paylock.State)"
																	}
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Completed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "800:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"src": "794:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															394,
															395
														],
														"referencedDeclaration": 394,
														"src": "785:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "785:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "785:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 99,
																"name": "clock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "836:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 100,
																"name": "timeUnit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "845:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "836:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 98,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															394,
															395
														],
														"referencedDeclaration": 394,
														"src": "828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "828:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "828:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 104,
														"name": "st",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "865:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 105,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "870:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																"typeString": "type(enum Paylock.State)"
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Delay",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "870:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"src": "865:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$8",
														"typeString": "enum Paylock.State"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "865:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 109,
														"name": "disc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "892:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "35",
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "899:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "892:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "892:8:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "953884de",
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "collect_1_N",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "762:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "774:0:0"
									},
									"scope": 185,
									"src": "742:166:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "948:132:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$8",
																"typeString": "enum Paylock.State"
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 118,
																"name": "st",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "968:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 119,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "974:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																		"typeString": "type(enum Paylock.State)"
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Delay",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "974:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"src": "968:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															394,
															395
														],
														"referencedDeclaration": 394,
														"src": "959:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "959:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 125,
																"name": "clock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "1006:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 126,
																	"name": "timeUnit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "1014:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1023:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1014:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1006:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															394,
															395
														],
														"referencedDeclaration": 394,
														"src": "998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "998:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "998:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 132,
														"name": "st",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1036:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 133,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "1041:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																"typeString": "type(enum Paylock.State)"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Done_2",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1041:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"src": "1036:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$8",
														"typeString": "enum Paylock.State"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "1036:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 137,
														"name": "disc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1064:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "35",
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1071:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "1064:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "1064:8:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "e3ed5166",
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "collect_2_Y",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "936:2:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "948:0:0"
									},
									"scope": 185,
									"src": "916:164:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "1120:134:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$8",
																"typeString": "enum Paylock.State"
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 146,
																"name": "st",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "1140:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 147,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "1146:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																		"typeString": "type(enum Paylock.State)"
																	}
																},
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Delay",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1146:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$8",
																	"typeString": "enum Paylock.State"
																}
															},
															"src": "1140:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															394,
															395
														],
														"referencedDeclaration": 394,
														"src": "1131:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1131:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "1131:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 153,
																"name": "clock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "1178:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 154,
																	"name": "timeUnit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "1187:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1196:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1187:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1178:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															394,
															395
														],
														"referencedDeclaration": 394,
														"src": "1170:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1170:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "1170:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 160,
														"name": "st",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1209:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 161,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "1214:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$8_$",
																"typeString": "type(enum Paylock.State)"
															}
														},
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Forfeit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1214:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$8",
															"typeString": "enum Paylock.State"
														}
													},
													"src": "1209:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$8",
														"typeString": "enum Paylock.State"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1209:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 165,
														"name": "disc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1238:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1245:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1238:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "1238:8:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "94f5c52d",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "collect_2_N",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1120:0:0"
									},
									"scope": 185,
									"src": "1088:166:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "1287:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 174,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "1306:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1306:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 176,
																"name": "timeAdd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1320:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1306:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															394,
															395
														],
														"referencedDeclaration": 394,
														"src": "1298:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1298:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "1298:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1339:8:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 180,
														"name": "clock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1339:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1339:8:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3eaf5d9f",
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tick",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1275:2:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1287:0:0"
									},
									"scope": 185,
									"src": "1262:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 377,
							"src": "73:1285:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "Supplier",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9ae8886a",
									"id": 187,
									"name": "p",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 302,
									"src": "1393:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Paylock_$185",
										"typeString": "contract Paylock"
									},
									"typeName": {
										"contractScope": null,
										"id": 186,
										"name": "Paylock",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 185,
										"src": "1393:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Paylock_$185",
											"typeString": "contract Paylock"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6c8ae38c",
									"id": 189,
									"name": "r",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 302,
									"src": "1416:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Rental_$376",
										"typeString": "contract Rental"
									},
									"typeName": {
										"contractScope": null,
										"id": 188,
										"name": "Rental",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 376,
										"src": "1416:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Rental_$376",
											"typeString": "contract Rental"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "Supplier.State",
									"id": 192,
									"members": [
										{
											"id": 190,
											"name": "Working",
											"nodeType": "EnumValue",
											"src": "1453:7:0"
										},
										{
											"id": 191,
											"name": "Completed",
											"nodeType": "EnumValue",
											"src": "1463:9:0"
										}
									],
									"name": "State",
									"nodeType": "EnumDefinition",
									"src": "1440:34:0"
								},
								{
									"constant": false,
									"id": 194,
									"name": "st",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 302,
									"src": "1486:8:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_State_$192",
										"typeString": "enum Supplier.State"
									},
									"typeName": {
										"contractScope": null,
										"id": 193,
										"name": "State",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 192,
										"src": "1486:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_State_$192",
											"typeString": "enum Supplier.State"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 197,
									"name": "hasResouce",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 302,
									"src": "1501:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 195,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1501:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 196,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1519:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "1587:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 204,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "1598:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Paylock_$185",
															"typeString": "contract Paylock"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 206,
																"name": "pp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "1610:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 205,
															"name": "Paylock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "1602:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Paylock_$185_$",
																"typeString": "type(contract Paylock)"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1602:11:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Paylock_$185",
															"typeString": "contract Paylock"
														}
													},
													"src": "1598:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Paylock_$185",
														"typeString": "contract Paylock"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "1598:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 210,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "1624:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Rental_$376",
															"typeString": "contract Rental"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 212,
																"name": "rr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "1635:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 211,
															"name": "Rental",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "1628:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Rental_$376_$",
																"typeString": "type(contract Rental)"
															}
														},
														"id": 213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1628:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Rental_$376",
															"typeString": "contract Rental"
														}
													},
													"src": "1624:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Rental_$376",
														"typeString": "contract Rental"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "1624:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 216,
														"name": "st",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1649:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$192",
															"typeString": "enum Supplier.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 217,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "1654:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$192_$",
																"typeString": "type(enum Supplier.State)"
															}
														},
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Working",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1654:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$192",
															"typeString": "enum Supplier.State"
														}
													},
													"src": "1649:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$192",
														"typeString": "enum Supplier.State"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "1649:18:0"
											}
										]
									},
									"documentation": null,
									"id": 222,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"name": "pp",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 222,
												"src": "1549:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"name": "rr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 222,
												"src": "1560:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1560:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1548:31:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1587:0:0"
									},
									"scope": 302,
									"src": "1537:138:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "1744:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 229,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "1770:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Rental_$376",
																"typeString": "contract Rental"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Rental_$376",
																"typeString": "contract Rental"
															}
														],
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1762:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 227,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1762:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1762:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 226,
												"id": 231,
												"nodeType": "Return",
												"src": "1755:17:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4013fd04",
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRental",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1701:2:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"name": "rentalAddr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 233,
												"src": "1725:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1724:20:0"
									},
									"scope": 302,
									"src": "1683:97:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "1819:100:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_State_$192",
																"typeString": "enum Supplier.State"
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 237,
																"name": "st",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "1839:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$192",
																	"typeString": "enum Supplier.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 238,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "1845:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$192_$",
																		"typeString": "type(enum Supplier.State)"
																	}
																},
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Working",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1845:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$192",
																	"typeString": "enum Supplier.State"
																}
															},
															"src": "1839:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															394,
															395
														],
														"referencedDeclaration": 394,
														"src": "1830:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1830:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "1830:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 243,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "1870:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Paylock_$185",
																"typeString": "contract Paylock"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "signal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 62,
														"src": "1870:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1870:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "1870:10:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 248,
														"name": "st",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1891:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$192",
															"typeString": "enum Supplier.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 249,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "1896:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$192_$",
																"typeString": "type(enum Supplier.State)"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Completed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1896:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$192",
															"typeString": "enum Supplier.State"
														}
													},
													"src": "1891:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$192",
														"typeString": "enum Supplier.State"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "1891:20:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d56b2889",
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "finish",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1807:2:0"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:0"
									},
									"scope": 302,
									"src": "1792:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "1975:114:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1994:11:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 258,
																"name": "hasResouce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "1995:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															394,
															395
														],
														"referencedDeclaration": 394,
														"src": "1986:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1986:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "1986:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31",
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2043:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 262,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "2017:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Rental_$376",
																		"typeString": "contract Rental"
																	}
																},
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "rent_out_resource",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 348,
																"src": "2017:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_payable$__$returns$__$",
																	"typeString": "function () payable external"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2017:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_external_payable$__$returns$__$value_$",
																"typeString": "function (uint256) pure returns (function () payable external)"
															}
														},
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2017:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2017:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "2017:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 271,
														"name": "hasResouce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "2064:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2077:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2064:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "2064:17:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "391913f5",
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "aquire_resource",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1955:2:0"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:0"
									},
									"scope": 302,
									"src": "1931:158:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "2133:99:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 280,
															"name": "hasResouce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "2152:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															394,
															395
														],
														"referencedDeclaration": 394,
														"src": "2144:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2144:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "2144:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 283,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "2174:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Rental_$376",
																"typeString": "contract Rental"
															}
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "retrieve_resource",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 367,
														"src": "2174:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2174:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "2174:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 288,
														"name": "hasResouce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "2206:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2219:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2206:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "2206:18:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "ca6f5fc9",
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "return_resource",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2121:2:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2133:0:0"
									},
									"scope": 302,
									"src": "2097:135:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "2318:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 297,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2298:2:0"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2318:0:0"
									},
									"scope": 302,
									"src": "2291:30:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "2407:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 301,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2387:2:0"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2407:0:0"
									},
									"scope": 302,
									"src": "2379:31:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 377,
							"src": "1362:1051:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 376,
							"linearizedBaseContracts": [
								376
							],
							"name": "Rental",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 304,
									"name": "resource_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 376,
									"src": "2440:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 303,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2440:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 306,
									"name": "resource_available",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 376,
									"src": "2469:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 305,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2469:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 309,
									"name": "deposit",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 376,
									"src": "2499:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 307,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2499:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 308,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2514:5:0",
										"subdenomination": "wei",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 313,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 376,
									"src": "2526:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 312,
										"keyType": {
											"id": 310,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2534:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2526:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 311,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2543:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "2586:44:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "resource_available",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "2597:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2618:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2597:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "2597:25:0"
											}
										]
									},
									"documentation": null,
									"id": 321,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2576:2:0"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2586:0:0"
									},
									"scope": 376,
									"src": "2565:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "2688:209:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 325,
																"name": "resource_available",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "2709:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2731:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2709:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															394,
															395
														],
														"referencedDeclaration": 394,
														"src": "2701:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "2701:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 330,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "2781:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 333,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 331,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "2791:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2791:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2781:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 334,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2805:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2805:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2781:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "2781:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 338,
														"name": "resource_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "2825:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 339,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2842:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2842:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2825:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "2825:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 343,
														"name": "resource_available",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "2863:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2884:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2863:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "2863:26:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "bb150fbf",
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rent_out_resource",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:2:0"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2688:0:0"
									},
									"scope": 376,
									"src": "2642:255:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "2943:305:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 352,
																	"name": "resource_available",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "2962:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2984:5:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "2962:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 355,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "2993:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2993:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 357,
																	"name": "resource_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "3007:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2993:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2962:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 351,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															394,
															395
														],
														"referencedDeclaration": 394,
														"src": "2954:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2954:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "2954:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 362,
														"name": "resource_available",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "3215:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3236:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3215:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "3215:25:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3695dd4b",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "retrieve_resource",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2931:2:0"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2943:0:0"
									},
									"scope": 376,
									"src": "2905:343:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "3337:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 371,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3317:2:0"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3337:0:0"
									},
									"scope": 376,
									"src": "3310:30:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "3426:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 375,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3406:2:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3426:0:0"
									},
									"scope": 376,
									"src": "3398:31:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 377,
							"src": "2417:1015:0"
						}
					],
					"src": "37:3395:0"
				},
				"id": 0
			}
		}
	}
}